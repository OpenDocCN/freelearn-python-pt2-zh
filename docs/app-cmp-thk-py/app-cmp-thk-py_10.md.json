["```py\nx = abs(-3.89)\nprint(x)\n```", "```py\n3.89\n```", "```py\n>>> p = 2\n```", "```py\n>>> eval('2 * p - 1')\n```", "```py\n3\n```", "```py\n>>> 10-8\n```", "```py\n2\n```", "```py\n>>> 4+5\n```", "```py\n9\n```", "```py\n>>> 10**5\n```", "```py\n100000\n```", "```py\n>>> max(12, 30)\n```", "```py\n30\n```", "```py\n>>> max(100, 10)\n```", "```py\n100\n```", "```py\n>>> max(230, 812, 109)\n```", "```py\n812\n```", "```py\n>>> min(230, 812, 109)\n```", "```py\n109\n```", "```py\nstates = {\n\u00a0\u00a0\u00a0\u00a0'Ohio':'Columbus',\n\u00a0\u00a0\u00a0\u00a0'Delaware':'Dover',\n\u00a0\u00a0\u00a0\u00a0'Pennsylvania':'Harrisburg',\n\u00a0\u00a0\u00a0\u00a0'Vermont':'Montpelier'\n\u00a0\u00a0\u00a0\u00a0}\nprint(states)\n```", "```py\n{'Ohio': 'Columbus', 'Delaware': 'Dover', 'Pennsylvania': 'Harrisburg', 'Vermont': 'Montpelier'}\n```", "```py\nstates = dict([\n\u00a0\u00a0\u00a0\u00a0('Ohio','Columbus'),\n\u00a0\u00a0\u00a0\u00a0('Delaware','Dover'),\n\u00a0\u00a0\u00a0\u00a0('Pennsylvania','Harrisburg'),\n\u00a0\u00a0\u00a0\u00a0('Vermont','Montpelier')\n])\nprint(states)\n```", "```py\n>>> states['Ohio']\n```", "```py\n'Columbus'\n```", "```py\n>>> states['Alabama']\n```", "```py\nTraceback (most recent call last):\n\u00a0\u00a0File \"<pyshell#23>\", line 1, in <module>\n\u00a0\u00a0\u00a0\u00a0states['Alabama']\nKeyError: 'Alabama'\n```", "```py\n>>> states['Alabama'] = 'Montgomery'\n```", "```py\n>>> print(states)\n```", "```py\n{'Ohio': 'Columbus', 'Delaware': 'Dover', 'Pennsylvania': 'Harrisburg', 'Vermont': 'Montpelier', 'Alabama': 'Montgomery'}\n```", "```py\n>>> del states['Delaware']\n```", "```py\n>>> print(states)\n```", "```py\n{'Ohio': 'Columbus', 'Pennsylvania': 'Harrisburg', 'Vermont': 'Montpelier', 'Alabama': 'Montgomery'}\n```", "```py\nmiscellaneous = {\n\u00a0\u00a0\u00a0\u00a0'sports' : ['tennis', 'bowling', 'golf'],\n\u00a0\u00a0\u00a0\u00a0'age' : '40',\n\u00a0\u00a0\u00a0\u00a0'home' : 'lake'\n\u00a0\u00a0\u00a0\u00a0}\n```", "```py\n>>> print(miscellaneous)\n```", "```py\n{'sports': ['tennis', 'bowling', 'golf'], 'age': '40', 'home': 'lake'}\n```", "```py\n>>> miscellaneous['sports']\n```", "```py\n['tennis', 'bowling', 'golf']\n```", "```py\nfruits = ['apple','apple','apple']\nprint(fruits)\n```", "```py\n['apple', 'apple', 'apple']\n```", "```py\nanimals = ['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant']\n```", "```py\n>>> print(animals[0])\n```", "```py\ndog\n```", "```py\n>>> print(animals[5])\nelephant\n```", "```py\n>>> print(animals[-1])\nelephant\n```", "```py\n>>> print(animals[1:4])\n```", "```py\n['cat', 'bird', 'lion']\n```", "```py\n>>> animals.append('duck')\n>>> print(animals)\n```", "```py\n['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant', 'duck']\n```", "```py\n>>> animals[2] = 'butterfly'\n>>> print(animals)\n```", "```py\n['dog', 'cat', 'butterfly', 'lion', 'tiger', 'elephant', 'duck']\n```", "```py\n>>> animals.remove('lion')\n>>> print(animals)\n```", "```py\n['dog', 'cat', 'butterfly', 'tiger', 'elephant', 'duck']\n```", "```py\n>>> animals.pop(1)\n'cat'\n```", "```py\n>>> print(animals)\n['dog', 'butterfly', 'tiger', 'elephant', 'duck']\n```", "```py\n>>> animals.pop()\n'duck'\n```", "```py\n>>> print(animals)\n['dog', 'butterfly', 'tiger', 'elephant']\n```", "```py\n>>> del animals[1]\n>>> print(animals)\n```", "```py\n['dog', 'tiger', 'elephant']\n```", "```py\n>>> del animals\n>>> print(animals)\n```", "```py\nTraceback (most recent call last):\n\u00a0\u00a0File \"<pyshell#49>\", line 1, in <module>\n\u00a0\u00a0\u00a0\u00a0print(animals)\nNameError: name 'animals' is not defined\n```", "```py\n>>> animals.clear()\n>>> print(animals)\n```", "```py\n[]\n```", "```py\n>>> print(len(animals))\n```", "```py\n6\n```", "```py\nanimals = ['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant']\ncolors = ['blue', 'red', 'yellow']\nprint(animals)\nprint(colors)\n```", "```py\n>>> animals.extend(colors)\n>>> print(animals)\n```", "```py\n['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant', 'blue', 'red', 'yellow']\n```", "```py\n>>> colors.extend(animals)\n>>> print(colors)\n```", "```py\n['blue', 'red', 'yellow', 'dog', 'cat', 'bird', 'lion', 'tiger', 'elephant']\n```", "```py\nanimals = ['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant']\nnumbers = [4, 1, 5, 8, 2, 4]\nprint(animals)\nprint(numbers)\n```", "```py\n['dog', 'cat', 'bird', 'lion', 'tiger', 'elephant']\n[4, 1, 5, 8, 2, 4]\n```", "```py\n>>> numbers.sort()\n>>> print(numbers)\n```", "```py\n[1, 2, 4, 4, 5, 8]\n```", "```py\n>>> animals.sort()\n>>> print(animals)\n```", "```py\n['bird', 'cat', 'dog', 'elephant', 'lion', 'tiger']\n```", "```py\nname = 'Marcus'\nb = 10\ncountry_1 = 'Greece'\nprint(name)\nprint(b)\nprint(country_1)\n```", "```py\nMarcus\n10\nGreece\n```", "```py\n>>> print(name + ' ' + country_1)\n```", "```py\n>>> print(b + name)\n```", "```py\nTraceback (most recent call last):\n\u00a0\u00a0File \"<pyshell#70>\", line 1, in <module>\n\u00a0\u00a0\u00a0\u00a0print(b + name)\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n```", "```py\n>>> print(str(b) + ' ' + name)\n```", "```py\n10 Marcus\n```", "```py\na, b, c, d = 'John', 'Mike', 'Jayden', 'George'\nprint(a)\nprint(b)\nprint(c)\nprint(d)\n```", "```py\nJohn\nMike\nJayden\nGeorge\n```", "```py\ndef evenNumbers(i, j):\n\u00a0\u00a0\u00a0\u00a0a = i - 1\n\u00a0\u00a0\u00a0\u00a0b = j + 1\n\u00a0\u00a0\u00a0\u00a0for number in range(a, b):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if number % 2 == 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(number)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a = a + 1\n```", "```py\n>>> evenNumbers(2, 10)\n```", "```py\n2\n4\n6\n8\n10\n```", "```py\n>>> evenNumbers(12, 25)\n```", "```py\n12\n14\n16\n18\n20\n22\n24\n```", "```py\nlistEvens = []\ndef evenNumbers(i, j):\n\u00a0\u00a0\u00a0\u00a0a = i - 1\n\u00a0\u00a0\u00a0\u00a0b = j + 1\n\u00a0\u00a0\u00a0\u00a0for number in range(a, b):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if number % 2 == 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0listEvens.append(number)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a = a + 1\n\u00a0\u00a0\u00a0\u00a0print(listEvens)\n```", "```py\n>>> evenNumbers(10, 50)\n```", "```py\n[10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50]\n```", "```py\ndef nameFunction(name):\n\u00a0\u00a0\u00a0\u00a0print('Hello ' + name)\n```", "```py\n>>> nameFunction('Sofia')\n```", "```py\nHello Sofia\n```", "```py\n>>> nameFunction('Katya')\n```", "```py\nHello Katya\n```", "```py\nfOpen = open('filename.txt')\n```", "```py\nfOpen = open('C:/Documents/filename.txt')\n```", "```py\nfOpen = open('filename.txt', 'rt')\n```", "```py\nwith open(\"ch8_survey.txt\") as file:\n\u00a0\u00a0\u00a0\u00a0for line in file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0line = line.strip()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0divide = line.split(\" - \")\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name = divide[0]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0color = divide[1]\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(name + \" voted for \" + color)\n```", "```py\nPayton voted for Blue\nJohnny voted for Red\nMaxi voted for Blue\nJacky voted for Red\nAlicia voted for Blue\nJackson voted for Yellow\nPercy voted for Yellow\n```", "```py\nprint(\"The votes for Blue are in.\")\nblues = 0\nwith open(\"ch8_survey.txt\") as file:\n\u00a0\u00a0\u00a0\u00a0for line in file:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0line = line.strip()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0name, color = line.split(' - ')\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if color == \"Blue\":\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0blues = blues + 1\nprint(blues)\n```", "```py\nThe votes for Blue are in.\n3 \n```", "```py\ncolors = ['blue', 'green', 'red']\nfor color in colors:\n\u00a0\u00a0\u00a0\u00a0print(color)\n```", "```py\nblue\ngreen\nred\n```", "```py\nask = int(input(\"Please type a number less than 20\\. \"))\nwhile ask > 0:\n\u00a0\u00a0\u00a0\u00a0print(ask * 2)\n\u00a0\u00a0\u00a0\u00a0ask = ask \u2013 1\n```", "```py\nPlease type a number less than 20\\. 8\n16\n14\n12\n10\n8\n6\n4\n2\n```", "```py\njewelry = ['ring', 'watch', 'necklace', 'earrings', 'bracelets'] \ncolors = ['gold', 'silver', 'blue', 'red', 'black']\nfor j, c in zip(jewelry, colors):\n\u00a0\u00a0\u00a0\u00a0print(\"Type of jewelry: %s in %s color. \" %(j, c))\n```", "```py\nType of jewelry: ring in gold color. \nType of jewelry: watch in silver color. \nType of jewelry: necklace in blue color. \nType of jewelry: earrings in red color. \nType of jewelry: bracelets in black color.\n```", "```py\n>>> class Books:\n\tpass\n```", "```py\n>>> Books()\n```", "```py\n<__main__.Books object at 0x000001DD27E09DD8>\n```", "```py\n>>> a = Books()\n>>> b = Books()\n```", "```py\nclass Entry:\n\u00a0\u00a0\u00a0\u00a0def __init__(self, firstName, lastName, phone):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.firstName = firstName\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.lastName = lastName\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.phone = phone\n```", "```py\n>>> Johnny = Entry('John', 'Smith', '201-444-5555')\n```", "```py\n>>> Johnny.firstName\n```", "```py\n'John'\n```", "```py\n>>> Johnny.lastName\n```", "```py\n'Smith'\n```", "```py\n>>> Johnny.phone\n```", "```py\n'201-444-5555'\n```", "```py\n>>> max = Entry('Max', 'Minnow', '555-555-5555')\n>>> emma = Entry('Emma', 'Dixon', '211-999-9999')\n>>> emma.phone\n```", "```py\n'211-999-9999'\n```", "```py\n>>> max.lastName\n```", "```py\n'Minnow'\n```", "```py\n>>> class Job(Entry):\n\tpass\n```", "```py\n>>> engineer = Job('Justin', 'Jackson', '444-444-4444')\n```", "```py\nclass Books:\n\n\u00a0\u00a0\u00a0\u00a0def __init__(self, title, author, pubDate, pages):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.title = title\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.author = author\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.pubDate = pubDate\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0self.pages = pages\nbook1 = Books('The Fundamentals of Fashion Design', 'Sorger & Udale', '2006', '176')\nbook2 = Books('Projekt 1065: A Novel of World War II', 'Gratz', '2016', '309')\n```", "```py\n>>> book1.title\n```", "```py\n'The Fundamentals of Fashion Design'\n```", "```py\n>>> book2.pubDate\n```", "```py\n'2016'\n```", "```py\n>>> book3 = Books('peanut butter dogs', 'Murray', '2017', '160')\n```", "```py\n>>> book3.title\n```", "```py\n'peanut butter dogs'\n```", "```py\n>>> book3.pages\n```", "```py\n'160'\n```", "```py\na = int(input(\"Provide the first number to be added. \"))\nb = int(input(\"Please provide the second number to be added. \"))\nc = int(input(\"Provide the last number to be added. \"))\nprint(eval('a + b + c'))\n```", "```py\nProvide the first number to be added. 1\nPlease provide the second number to be added. 2\nProvide the last number to be added. 3\n6\n```", "```py\na = int(input(\"Provide the first number to be added. \"))\nb = int(input(\"Please provide the second number to be added. \"))\nc = int(input(\"Provide the last number to be added. \"))\nnumbers = []\nnumbers.append(a)\nnumbers.append(b)\nnumbers.append(c)\nprint(sum(numbers))\n```", "```py\nProvide the first number to be added. 1\nPlease provide the second number to be added. 2\nProvide the last number to be added. 3\n6\n```", "```py\nprint(\"This program will print the squares of the numbers in a given range of numbers.\")\na = int(input(\"What is the minimum of your range? \"))\nb = int(input(\"What is the maximum of your range? \"))\nNumbers = []\nb = b + 1\nfor i in range(a, b):\n\u00a0\u00a0\u00a0\u00a0j = i**2\n\u00a0\u00a0\u00a0\u00a0Numbers.append(j)\n\u00a0\u00a0\u00a0\u00a0i = i + 1\nprint(Numbers)\n```", "```py\nThis program will print the squares of the numbers in a given range of numbers.\nWhat is the minimum of your range? 4\nWhat is the maximum of your range? 14\n[16, 25, 36, 49, 64, 81, 100, 121, 144, 169, 196]\n```", "```py\nclass mammals:\n\u00a0\u00a0\u00a0\u00a0\u00a0def description(self):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Mammals are vertebrate animals.\")\n\n\u00a0\u00a0\u00a0\u00a0\u00a0def viviparous(self):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Mammals are viviparous, but some are not.\")\n\nclass monkey(mammals):\n\u00a0\u00a0\u00a0\u00a0\u00a0def viviparous(self):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"Monkeys are viviparous.\")\n\nclass platypus(mammals):\n\u00a0\u00a0\u00a0\u00a0\u00a0def viviparous(self):\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(\"The platypus is not viviparous. It's an egg-laying mammal.\")\n\nobj_mammals = mammals()\nobj_monkey = monkey()\nobj_platypus = platypus()\n\nobj_mammals.description()\nobj_mammals.viviparous()\n\nobj_monkey.description()\nobj_monkey.viviparous()\n\nobj_platypus.description()\nobj_platypus.viviparous()\n```", "```py\nMammals are vertebrate animals.\nMammals are viviparous, but some are not.\nMammals are vertebrate animals.\nMonkeys are viviparous.\nMammals are vertebrate animals.\nThe platypus is not viviparous. It's an egg-laying mammal.\n```"]