["```py\nfor i in range(1, 10)\n\u00a0\u00a0\u00a0\u00a0print(i)\n```", "```py\nSyntaxError: invalid syntax\n```", "```py\nfor i in range(1, 10):\n\u00a0\u00a0\u00a0\u00a0print(i)\n```", "```py\n1\n2\n3\n4\n5\n6\n7\n8\n9\n```", "```py\nname = str(input('What is your name? ')\nprint(name)\n```", "```py\nSyntaxError: invalid syntax\n```", "```py\nname = input('What is your name? ')\nprint(name)\n```", "```py\nWhat is your name? Monique\nMonique\n```", "```py\ncars = {\n\u00a0\u00a0\u00a0\u00a0\"Hyundai\": \"Kona\",\n\u00a0\u00a0\u00a0\u00a0\"Honda\": \"CR-V\",\n\u00a0\u00a0\u00a0\u00a0\"Toyota\": \"Camry\"\n\nprint(cars)\n```", "```py\ncars = {\n\u00a0\u00a0\u00a0\u00a0\"Hyundai\": \"Kona\",\n\u00a0\u00a0\u00a0\u00a0\"Honda\": \"CR-V\",\n\u00a0\u00a0\u00a0\u00a0\"Toyota\": \"Camry\"\n\u00a0\u00a0\u00a0\u00a0}\nprint(cars)\n```", "```py\n{'Hyundai': 'Kona', 'Honda': 'CR-V', 'Toyota': 'Camry'}\n```", "```py\nprint(dir(locals()['__builtins__']))\n```", "```py\n['ArithmeticError', 'AssertionError', 'AttributeError', 'BaseException', 'BlockingIOError', 'BrokenPipeError', 'BufferError', 'BytesWarning', 'ChildProcessError', 'ConnectionAbortedError', 'ConnectionError', 'ConnectionRefusedError', 'ConnectionResetError', 'DeprecationWarning', 'EOFError', 'Ellipsis', 'EnvironmentError', 'Exception', 'False', 'FileExistsError', 'FileNotFoundError', 'FloatingPointError', 'FutureWarning', 'GeneratorExit', 'IOError', 'ImportError', 'ImportWarning', 'IndentationError', 'IndexError', 'InterruptedError', 'IsADirectoryError', 'KeyError', 'KeyboardInterrupt', 'LookupError', 'MemoryError', 'ModuleNotFoundError', 'NameError', 'None', 'NotADirectoryError', 'NotImplemented', 'NotImplementedError', 'OSError', 'OverflowError', 'PendingDeprecationWarning', 'PermissionError', 'ProcessLookupError', 'RecursionError', 'ReferenceError', 'ResourceWarning', 'RuntimeError', 'RuntimeWarning', 'StopAsyncIteration', 'StopIteration', 'SyntaxError', 'SyntaxWarning', 'SystemError', 'SystemExit', 'TabError', 'TimeoutError', 'True', 'TypeError', 'UnboundLocalError', 'UnicodeDecodeError', 'UnicodeEncodeError', 'UnicodeError', 'UnicodeTranslateError', 'UnicodeWarning', 'UserWarning', 'ValueError', 'Warning', 'ZeroDivisionError', '__build_class__', '__debug__', '__doc__', '__import__', '__loader__', '__name__', '__package__', '__spec__', 'abs', 'all', 'any', 'ascii', 'bin', 'bool', 'breakpoint', 'bytearray', 'bytes', 'callable', 'chr', 'classmethod', 'compile', 'complex', 'copyright', 'credits', 'delattr', 'dict', 'dir', 'divmod', 'enumerate', 'eval', 'exec', 'exit', 'filter', 'float', 'format', 'frozenset', 'getattr', 'globals', 'hasattr', 'hash', 'help', 'hex', 'id', 'input', 'int', 'isinstance', 'issubclass', 'iter', 'len', 'license', 'list', 'locals', 'map', 'max', 'memoryview', 'min', 'next', 'object', 'oct', 'open', 'ord', 'pow', 'print', 'property', 'quit', 'range', 'repr', 'reversed', 'round', 'set', 'setattr', 'slice', 'sorted', 'staticmethod', 'str', 'sum', 'super', 'tuple', 'type', 'vars', 'zip']\n```", "```py\nnumber = 5\nnumber2 = 'five'\nprint(number)\nbreakpoint()\nprint(number2)\n```", "```py\n5\n> /Users/.../Python/ch7_debugger.py(8)<module>()\n-> print(number2)\n(Pdb) c\nfive\n```", "```py\n5\n> /Users/.../Python/ch7_debugger.py(8)<module>()\n-> print(number2)\n(Pdb) q\nTraceback (most recent call last):\n\u00a0\u00a0File \"/Users/.../Python/ch7_debugger.py\", line 8, in <module>\n\u00a0\u00a0\u00a0\u00a0print(number2)\n\u00a0\u00a0File \"/Users/.../Python/ch7_debugger.py\", line 8, in <module>\n\u00a0\u00a0\u00a0\u00a0print(number2)\nbdb.BdbQuit\n```", "```py\n5\n> /Users/.../Python/ch7_debugger.py(8)<module>()\n-> print(number2)\n(Pdb) n\nfive\n--Return--\n> /Users/.../Python/ch7_debugger.py(8)<module>()->None\n-> print(number2)\n(Pdb)\n```", "```py\nnumber = 5\nnumber2 = 'five'\nprint(number)\nbreakpoint()\nprint(str(number) + number2)\n```", "```py\n5\n> /Users/.../Python/ch7_debugger2.py(8)<module>()\n-> print(number + \" \" + number2)\n(Pdb) s\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n> /Users/.../Python/ch7_debugger2.py(8)<module>()\n-> print(number + \" \" + number2)\n(Pdb)\n```", "```py\n5\n> /Users/.../Python/ch7_debugger2.py(8)<module>()\n-> print(number + \" \" + number2)\n(Pdb) c\nTraceback (most recent call last):\n\u00a0\u00a0File \"/Users/.../Python/ch7_debugger2.py\", line 8, in <module>\n\u00a0\u00a0\u00a0\u00a0print(number + \" \" + number2)\nTypeError: unsupported operand type(s) for +: 'int' and 'str'\n```", "```py\nnumber = 5\nnumber2 = 'five'\nprint(number)\nbreakpoint()\nprint(str(number) + \" \" + number2)\n```", "```py\n5\n> /Users/.../Python/ch7_debugger3.py(8)<module>()\n-> print(str(number) + \" \" + number2)\n(Pdb) c\n5 five \n```", "```py\nprint(\"This program will print the even numbers for any range of numbers provided.\")\nendpoint1 = int(input(\"What is the lower endpoint of your range? \"))\nendpoint2 = int(input(\"What is the upper endpoint of your range? \"))\nendpoint2 = endpoint2 + 1\nfor i in range(endpoint1, endpoint2):\n\u00a0\u00a0\u00a0\u00a0if i % 2 == 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0print(i)\n\n```", "```py\nThis program will print the even numbers for any range of numbers provided.\nWhat is the lower endpoint of your range? 2\nWhat is the upper endpoint of your range? 6\n2\n4\n6\n```", "```py\nThis program will print the even numbers for any range of numbers provided.\nWhat is the lower endpoint of your range? 3\nWhat is the upper endpoint of your range? 9\n4\n6\n8\n```", "```py\nprint(\"This program will print the even numbers for any range of numbers provided.\")\nendpoint1 = int(input(\"What is the lower endpoint of your range? \"))\nendpoint2 = int(input(\"What is the upper endpoint of your range? \"))\nendpoint2 = endpoint2 + 1\nevenNumbers = []\nfor i in range(endpoint1, endpoint2):\n\u00a0\u00a0\u00a0\u00a0if i % 2 == 0:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0evenNumbers.append(i)\n\nprint(evenNumbers)\n```", "```py\nThis program will print the even numbers for any range of numbers provided.\nWhat is the lower endpoint of your range? 2\nWhat is the upper endpoint of your range? 10\n[2, 4, 6, 8, 10]\n```", "```py\nThis program will print the even numbers for any range of numbers provided.\nWhat is the lower endpoint of your range? 300\nWhat is the upper endpoint of your range? 1000\n[300, 302, 304, 306, 308, 310, 312, 314, 316, 318, 320, 322, 324, 326, 328, 330, 332, 334, 336, 338, 340, 342, 344, 346, 348, 350, 352, 354, 356, 358, 360, 362, 364, 366, 368, 370, 372, 374, 376, 378, 380, 382, 384, 386, 388, 390, 392, 394, 396, 398, 400, 402, 404, 406, 408, 410, 412, 414, 416, 418, 420, 422, 424, 426, 428, 430, 432, 434, 436, 438, 440, 442, 444, 446, 448, 450, 452, 454, 456, 458, 460, 462, 464, 466, 468, 470, 472, 474, 476, 478, 480, 482, 484, 486, 488, 490, 492, 494, 496, 498, 500, 502, 504, 506, 508, 510, 512, 514, 516, 518, 520, 522, 524, 526, 528, 530, 532, 534, 536, 538, 540, 542, 544, 546, 548, 550, 552, 554, 556, 558, 560, 562, 564, 566, 568, 570, 572, 574, 576, 578, 580, 582, 584, 586, 588, 590, 592, 594, 596, 598, 600, 602, 604, 606, 608, 610, 612, 614, 616, 618, 620, 622, 624, 626, 628, 630, 632, 634, 636, 638, 640, 642, 644, 646, 648, 650, 652, 654, 656, 658, 660, 662, 664, 666, 668, 670, 672, 674, 676, 678, 680, 682, 684, 686, 688, 690, 692, 694, 696, 698, 700, 702, 704, 706, 708, 710, 712, 714, 716, 718, 720, 722, 724, 726, 728, 730, 732, 734, 736, 738, 740, 742, 744, 746, 748, 750, 752, 754, 756, 758, 760, 762, 764, 766, 768, 770, 772, 774, 776, 778, 780, 782, 784, 786, 788, 790, 792, 794, 796, 798, 800, 802, 804, 806, 808, 810, 812, 814, 816, 818, 820, 822, 824, 826, 828, 830, 832, 834, 836, 838, 840, 842, 844, 846, 848, 850, 852, 854, 856, 858, 860, 862, 864, 866, 868, 870, 872, 874, 876, 878, 880, 882, 884, 886, 888, 890, 892, 894, 896, 898, 900, 902, 904, 906, 908, 910, 912, 914, 916, 918, 920, 922, 924, 926, 928, 930, 932, 934, 936, 938, 940, 942, 944, 946, 948, 950, 952, 954, 956, 958, 960, 962, 964, 966, 968, 970, 972, 974, 976, 978, 980, 982, 984, 986, 988, 990, 992, 994, 996, 998, 1000]\n```", "```py\ncat = \"Whiskers\"\ndog = \"King Kong\"\nbird = \"Pirate\"\nprint(\"The cat's name is \" + cat + \", the dog's name is \" + dog + \\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\", and the bird's name is \" + bird + \".\")\n```", "```py\nThe cat's name is Whiskers, the dog's name is King Kong, and the bird's name is Pirate.\n```", "```py\ndef myPets(cat, dog, bird):\n\u00a0\u00a0\u00a0\u00a0print(\"The cat's name is \" + cat + \", the dog's name is \" + dog +\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\", and the bird's name is \" + bird + \".\")\nmyPets(cat = \"Whiskers\", dog = \"King Kong\", bird = \"Pirate\")\n```", "```py\nThe cat's name is Whiskers, the dog's name is King Kong, and the bird's name is Pirate.\n```", "```py\ndef myPets(cat, dog, bird):\n\u00a0\u00a0\u00a0\u00a0print(\"The cat's name is \" + cat + \", the dog's name is \" + dog +\\\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\", and the bird's name is \" + bird + \".\")\nmyPets(cat = \"Whiskers\", dog = \"King Kong\", bird = \"Pirate\")\nmyPets(cat = \"Mimi\", dog = \"Jack\", bird = \"Peyo\")\nmyPets(cat = \"Softy\", dog = \"Leila\", bird = \"Oliver\")\n```", "```py\nThe cat's name is Whiskers, the dog's name is King Kong, and the bird's name is Pirate.\nThe cat's name is Mimi, the dog's name is Jack, and the bird's name is Peyo.\nThe cat's name is Softy, the dog's name is Leila, and the bird's name is Oliver.\n```"]