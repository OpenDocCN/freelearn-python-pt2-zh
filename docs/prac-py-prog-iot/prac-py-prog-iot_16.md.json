["```py\n$ cd chapter13              # Change into this chapter's folder\n$ python3 -m venv venv      # Create Python Virtual Environment\n$ source venv/bin/activate  # Activate Python Virtual Environment\n(venv) $ pip install pip --upgrade        # Upgrade pip\n(venv) $ pip install -r requirements.txt  # Install dependent packages\n```", "```py\n# DHT Temperature/Humidity Sensor GPIO. GPIO = 24                                                     # (1)   # Configure DHT sensor - Uncomment appropriate line \n# based on the sensor you have. dht = DHT11(GPIO, use_internal_pullup=True, timeout_secs=0.5) # (2) \n#dht = DHT22(GPIO, use_internal_pullup=True, timeout_secs=0.5)\n```", "```py\nUSE_DEGREES_CELSIUS = True # False to use Fahrenheit   # (3)\nHIGH_TEMP_TRIGGER   = 20 # Degrees                     # (4)\nLOW_TEMP_TRIGGER    = 19 # Degrees                     # (5)\n```", "```py\nEVENT = \"RPITemperature\"                    # (6)\nAPI_KEY = \"<ADD YOUR IFTTT API KEY HERE>\"\n```", "```py\nURL = \"https://maker.ifttt.com/trigger/{}/with/key/{}\".format(EVENT, API_KEY) # (7)\n```", "```py\n(venv) $ python ifttt_dht_trigger_email.py\nINFO:root:Press Control + C To Exit.\nINFO:root:Sensor result {'temp_c': 19.6, 'temp_f': 67.3, 'humidity': 43.7, 'valid': True}\nINFO:root:Sensor result {'temp_c': 20.7, 'temp_f': 69.3, 'humidity': 42.9, 'valid': True}\nINFO:root:Temperature 20.7 is >= 20, triggering event RPITemperature\nINFO:root:Response Congratulations! You've fired the RPITemperature event\nINFO:root:Successful Request.\n```", "```py\n(venv) $ python dweet_led.py\nINFO:main:Created new thing name 749b5e60\nLED Control URLs - Try them in your web browser:\n  On : https://dweet.io/dweet/for/749b5e60?state=on\n  Off : https://dweet.io/dweet/for/749b5e60?state=off\n  Blink : https://dweet.io/dweet/for/749b5e60?state=blink\n```", "```py\n# DHT Temperature/Humidity Sensor\nGPIO = 24                                                   # (1)\n#dht = DHT11(GPIO, use_internal_pullup=True, timeout_secs=0.5)\ndht = DHT22(GPIO, use_internal_pullup=True, timeout_secs=0.5)\n```", "```py\n# ThingSpeak Configuration\nWRITE_API_KEY = \"\" # <<<< ADD YOUR WRITE API KEY HERE   # (2)\nCHANNEL_ID = \"\"    # <<<< ADD YOUR CHANNEL ID HERE\n\n# See for values https://au.mathworks.com/help/thingspeak/time-zones-reference.html\nTIME_ZONE = \"Australia/Melbourne\"\n```", "```py\n(venv) $ python thing_speak_dht_mqtt.py\nINFO:root:Collecting Data and Sending to ThingSpeak every 600 seconds. Press Control + C to Exit\nINFO:root:Sensor result {'temp_c': 25.3, 'temp_f': 77.5, 'humidity': 43.9, 'valid': True}\nINFO:root:Published to mqtt.thingspeak.com\n```"]