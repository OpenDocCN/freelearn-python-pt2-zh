["```py\n$ cd chapter14              # Change into this chapter's folder\n$ python3 -m venv venv      # Create Python Virtual Environment\n$ source venv/bin/activate  # Activate Python Virtual Environment\n(venv) $ pip install pip --upgrade        # Upgrade pip\n(venv) $ pip install -r requirements.txt  # Install dependent packages\n```", "```py\n# Terminal 1\n(venv) $ cd tree_api_service\n(venv) $ python main.py\n* Serving Flask app \"main\" (lazy loading)\n... truncated ...\nINFO:werkzeug: * Running on http://0.0.0.0:5000/ (Press CTRL+C to quit)\n```", "```py\n# Terminal 2\n$ curl -X POST \"http://localhost:5000/lights/color?colors=red,blue,black&pattern=yes\"\n```", "```py\n# Terminal 2\n$ curl -X POST \"http://localhost:5000/lights/animation?mode=left&speed=5\"\n```", "```py\n# Terminal 2\n$ curl -X POST \"http://localhost:5000/lights/clear\"\n```", "```py\n# Terminal 2\n$ curl -X POST \"http://localhost:5000/servo/sweep\"\n```", "```py\n# Terminal 1\n(venv) $ cd tree_mqtt_service\n(venv) $ python main.py\nINFO:root:Connecting to MQTT Broker localhost:1883\nINFO:MQTTListener:Connected to MQTT Broker\n```", "```py\n# Terminal 2\n$ mosquitto_pub -h \"localhost\" -t \"tree/lights/pattern\" -m \"red blue black\"\n```", "```py\n# Terminal 2\n$ mosquitto_pub -h \"localhost\" -t \"tree/lights/animation\" -m \"left\"\n```", "```py\n# Terminal 2\n$ mosquitto_pub -h \"localhost\" -t \"tree/lights/clear\" -m \"\"\n```", "```py\n# Terminal 2\n$ mosquitto_pub -h \"localhost\" -t \"tree/servo/sweep\" -m \"\"\n```", "```py\ndef process_dweet(self, dweet):        # (1)\n\n   # ...Truncated...\n   # command is \"<action> <data1> <data2> ... <dataN>\"\n   command = dweet['command'].strip()\n   # ...Truncated...\n\n   # elements (List) <action>,<data1>,<data2>,...,<dataN>\n   elements = command.split(\" \")\n   action = elements[0].lower()\n   data = \" \".join(elements[1:])\n\n   self.publish_mqtt(action, data)     # (2)\n```", "```py\n    def publish_mqtt(self, action, data):                       # (3)\n        if action in self.action_topic_mappings:\n            # Map Action into MQTT Topic\n            # (Eg mode --> tree/lights/mode). \n            # See config.py for mappings.\n\n            topic = self.action_topic_mappings[action]\n            retain = topic in self.mqtt_topic_retain_message    # (4)\n            # ... truncated ...\n            publish.single(topic, data, qos=0,                  # (5)\n                          client_id=self.mqtt_client_id, \n                          retain=retain, hostname=self.mqtt_host, \n                          port=self.mqtt_port)\n    # ... truncated ...\n\n```", "```py\nACTION_TOPIC_MAPPINGS = {\n    \"clear\": \"tree/lights/clear\",\n    \"push\": \"tree/lights/push\",\n    ... truncated ...\n}\n```", "```py\nTOPIC_RETAIN_MESSAGE = {\n    \"tree/lights/clear\": False,\n    \"tree/lights/animation\": True,\n    ... truncated ...\n}\n```", "```py\n(venv) $ cd dweet_service\n(venv) $ python main.py\nINFO:DweetListener:Created new thing name ab5f2504\nINFO:DweetListener:Dweet Listener initialized. Publish command dweets to 'https://dweet.io/dweet/for/ab5f2504?command=...'\n```"]