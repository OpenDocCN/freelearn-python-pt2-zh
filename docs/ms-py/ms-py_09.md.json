["```py\n**Documentation, how to use Sphinx and reStructuredText**\n**##################################################################**\n\n**Documenting code can be both fun and useful! ...**\n\n**Additionally, adding ...**\n\n**... So that typing `Spam.eggs.` will automatically ...**\n\n**Topics covered in this chapter are as follows:**\n\n **- The reStructuredText syntax**\n **- Setting up documentation using Sphinx**\n **- Sphinx style docstrings**\n **- Google style docstrings**\n **- NumPy style docstrings**\n\n**The reStructuredText syntax**\n**********************************************************************\n\n**The reStructuredText format (also known as ...**\n\n```", "```py\n**pip install docutils**\n\n```", "```py\n**rst2html.py file.rst file.html**\n\n```", "```py\n    - item 1\n    - item 2\n    ```", "```py\n    1\\. item 1\n    2\\. item 2\n    ```", "```pyadd some code```", "```py\n**Part**\n**################################################################**\n\n**Chapter**\n********************************************************************\n\n**Section**\n**================================================================**\n\n**Subsection**\n**----------------------------------------------------------------**\n\n**Subsubsection**\n**^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^**\n\n**Paragraph**\n**\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"**\n\n**Content**\n\n```", "```py\n**################################################################**\n**Part**\n**################################################################**\n\n********************************************************************\n**Chapter**\n********************************************************************\n\n**================================================================**\n**Section**\n**================================================================**\n\n**----------------------------------------------------------------**\n**Subsection**\n**----------------------------------------------------------------**\n\n**^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^**\n**Subsubsection**\n**^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^**\n\n**\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"**\n**Paragraph**\n**\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"**\n\n**Content**\n\n```", "```py\n**Section**\n**=======**\n\n```", "```py\n**Section**\n**====**\n\n```", "```py\n**1\\. With**\n**2\\. Numbers**\n\n**a. With**\n**#. letters**\n\n**i. Roman**\n**#. numerals**\n\n**(1) With**\n**(2) Parenthesis**\n\n```", "```py\n**- dashes**\n**- and more dashes**\n\n*** asterisk**\n*** stars**\n\n**+ plus**\n**+ and plus**\n\n```", "```py\n**-s, --spam  This is the spam option**\n**--eggs      This is the eggs option**\n\n```", "```py\n**spam**\n **Spam is a canned pork meat product**\n**eggs**\n **Is, similar to spam, also food**\n\n```", "```py\n**1\\. With**\n**2\\. Numbers**\n\n **(food) food**\n\n **spam**\n **Spam is a canned pork meat product**\n\n **eggs**\n **Is, similar to spam, also food**\n\n **(other) non-food stuff**\n\n```", "```py\n**The switch to reStructuredText and Sphinx was made with the**\n**`Python 2.6 <https://docs.python.org/whatsnew/2.6.html>`_**\n**release.**\n\n```", "```py\n**The switch to reStructuredText and Sphinx was made with the**\n**`python 2.6`_ release.**\n\n**.. _`Python 2.6`: https://docs.python.org/whatsnew/2.6.html**\n\n```", "```py\n**.. _label:**\n\n```", "```py\n**The introduction section**\n**================================================================**\n\n**This section contains:**\n\n**- `chapter 1`_**\n**- :ref:`chapter2`**\n\n **1\\. my_label_**\n\n **2\\. `And a label link with a custom title <my_label>`_**\n\n**Chapter 1**\n**----------------------------------------------------------------**\n\n**Jumping back to the beginning of `chapter 1`_ is also possible.**\n**Or jumping to :ref:`Chapter 2 <chapter2>`**\n\n**.. _chapter2:**\n\n**Chapter 2 With a longer title**\n**----------------------------------------------------------------**\n\n**The next chapter.**\n\n**.. _my_label:**\n\n**The label points here.**\n\n**Back to `the introduction section`_**\n\n```", "```py\n **.. name_of_directive::**\n\n```", "```py\n**.. image:: python.png**\n\n```", "```py\n**.. image:: python.png**\n **:width: 150**\n **:height: 100**\n\n**.. image:: python.png**\n **:scale: 10**\n\n```", "```py\n**.. figure:: python.png**\n **:scale: 10**\n\n **The Python logo**\n\n```", "```py\n**.. |python| image:: python.png**\n **:scale: 1**\n\n**The Python programming language uses the logo: |python|**\n\n```", "```py\n**.. |author| replace:: Rick van Hattem**\n\n**This book was written by |author|**\n\n```", "```py\n**.. code:: python**\n\n **def spam(*args):**\n **print('spam got args', args)**\n\n```", "```py\n**.. math::**\n\n **\\int_a^b f(x)\\,dx = F(b) - F(a)**\n\n```", "```py\n**Before comments**\n\n**.. Everything here will be commented**\n\n **And this as well**\n **.. code:: python**\n **def even_this_code_sample():**\n **pass  # Will be commented**\n\n**After comments**\n\n```", "```py\n**Normal text**\n\n **Quoted text**\n\n```", "```py\n**pip install sphinx**\n\n```", "```py\n**# sphinx-quickstart**\n**Welcome to the Sphinx 1.3.3 quickstart utility.**\n\n**...**\n\n**Enter the root path for documentation.**\n**> Root path for the documentation [.]: docs**\n\n**...**\n\n**The project name will occur in several places in the built documentation.**\n**> Project name: Mastering Python**\n**> Author name(s): Rick van Hattem**\n\n**# As version you might want to start below 1.0 or add an extra digit**\n**# but I would recommend leaving the default and modify the**\n**# configuration file instead. Just make it import from the Python**\n**# package instead. An example can be found in the numpy-stl package:**\n**# https://github.com/WoLpH/numpy-stl/blob/develop/docs/conf.py**\n**...**\n**> Project version: 1.0**\n**> Project release [1.0]:**\n\n**...**\n\n**# Enabling the epub builder can be useful for people using e-readers to**\n**# read the documentation.**\n**Sphinx can also add configuration for epub output:**\n**> Do you want to use the epub builder (y/n) [n]: y**\n\n**...**\n**# Autodoc is required to document the code, definitely recommended to**\n**# enable**\n**> autodoc: automatically insert docstrings from**\n **modules (y/n) [n]: y**\n\n**# With the doctest feature we can run tests embedded in the**\n**# documentation. This is meant for doctests in the .rst files.**\n**> doctest: automatically test code snippets in**\n **doctest blocks (y/n) [n]: y**\n\n**# Intersphinx enables linking between Sphinx documentation sets**\n**# allowing for links to external documentation. After enabling this**\n**# you can make str link to the regular Python documentation about str**\n**# for example.**\n**> intersphinx: link between Sphinx documentation**\n **of different projects (y/n) [n]: y**\n**...**\n**# Mathjax enables LaTeX style mathematical rendering, not strictly**\n**# needed but very useful for rendering equations.**\n**> mathjax: include math, rendered in the browser**\n **by MathJax (y/n) [n]: y**\n**...**\n**> viewcode: include links to the source code of**\n **documented Python objects (y/n) [n]: y**\n\n**...**\n\n**Creating file docs/conf.py.**\n**Creating file docs/index.rst.**\n**Creating file docs/Makefile.**\n**Creating file docs/make.bat.**\n\n**Finished: An initial directory structure has been created.**\n\n```", "```py\n **make builder**\n**where \"builder\" is one of the supported builders, e.g. html, latex or linkcheck.**\n\n```", "```py\n**# find docs**\n**docs**\n**docs/_build**\n**docs/_static**\n**docs/_templates**\n**docs/conf.py**\n**docs/index.rst**\n**docs/make.bat**\n**docs/Makefile**\n\n```", "```py\n**Welcome to Mastering Python's documentation!**\n**============================================**\n\n**Contents:**\n\n**.. toctree::**\n **:maxdepth: 2**\n\n**Indices and tables**\n**==================**\n\n*** :ref:`genindex`**\n*** :ref:`modindex`**\n*** :ref:`search`**\n\n```", "```py\n**cd docs**\n**make html**\n\n```", "```py\n**# make**\n**Please use `make <target>' where <target> is one of**\n **html       to make standalone HTML files**\n **dirhtml    to make HTML files named index.html in directories**\n **singlehtml to make a single large HTML file**\n **pickle     to make pickle files**\n **json       to make JSON files**\n **htmlhelp   to make HTML files and a HTML help project**\n **qthelp     to make HTML files and a qthelp project**\n **applehelp  to make an Apple Help Book**\n **devhelp    to make HTML files and a Devhelp project**\n **epub       to make an epub**\n **latex      to make LaTeX files, you can set PAPER=a4 or ...**\n **latexpdf   to make LaTeX files and run them through pdflatex**\n **latexpdfja to make LaTeX files and run them through platex/...**\n **text       to make text files**\n **man        to make manual pages**\n **texinfo    to make Texinfo files**\n **info       to make Texinfo files and run them through makeinfo**\n **gettext    to make PO message catalogs**\n **changes    to make an overview of all changed/added/deprecate...**\n **xml        to make Docutils-native XML files**\n **pseudoxml  to make pseudoxml-XML files for display purposes**\n **linkcheck  to check all external links for integrity**\n **doctest    to run all doctests embedded in the documentation**\n **coverage   to run coverage check of the documentation**\n\n```", "```py\n**class Spam(object):**\n **def __init__(self, arg, *args, **kwargs):**\n **pass**\n\n **def regular_method(self, arg):**\n **pass**\n\n **@classmethod**\n **def decorated_method(self, arg):**\n **pass**\n\n **def _hidden_method(self):**\n **pass**\n\n```", "```py\n**import spam**\n\n**class Eggs(spam.Spam):**\n **def regular_method(self):**\n **'''This regular method overrides**\n **:meth:`spam.Spam.regular_method`**\n **'''**\n **pass**\n\n```", "```py\n**# sphinx-apidoc h09 -o docs**\n**Creating file docs/eggs.rst.**\n**Creating file docs/spam.rst.**\n**Creating file docs/modules.rst.**\n\n```", "```py\n**.. toctree::**\n **:maxdepth: 2**\n\n **modules**\n\n```", "```py\n**import os**\n**sys.path.insert(0, os.path.join(os.path.abspath('..'), 'h09'))**\n\n```", "```py\n**cd docs**\n**make html**\n\n```", "```py\n**h09**\n**===**\n\n**.. toctree::**\n **:maxdepth: 4**\n\n **eggs**\n **spam**\n\n```", "```py\n**eggs module**\n**===========**\n\n**.. automodule:: eggs**\n **:members:**\n **:undoc-members:**\n **:show-inheritance:**\n\n```", "```py\n**.. toctree::**\n **:maxdepth: 2**\n\n```", "```py\n**.. toctree::**\n **:maxdepth: 2**\n\n **module.a**\n **module.b**\n **module.c**\n\n```", "```py\n**.. toctree::**\n **:maxdepth: 2**\n **:glob:**\n\n **module.***\n\n```", "```py\n**.. toctree::**\n **:maxdepth: 2**\n\n **The A module <module.a>**\n\n```", "```py\n**eggs module**\n**===========**\n\n**.. automodule:: eggs**\n **:members:**\n **:undoc-members:**\n **:show-inheritance:**\n\n```", "```py\n**eggs module**\n**===========**\n\n**.. automodule:: eggs**\n **:members:**\n **:undoc-members:**\n **:show-inheritance:**\n **:inherited-members:**\n\n```", "```py\n**eggs module**\n**===========**\n\n**.. automodule:: eggs**\n **:members:**\n **:undoc-members:**\n **:show-inheritance:**\n **:inherited-members:**\n **:private-members:**\n\n```", "```py\n**eggs module**\n**===========**\n\n**.. automodule:: eggs**\n **:members:**\n **:undoc-members:**\n **:show-inheritance:**\n\n **.. class:: NonExistingClass**\n **This class doesn't actually exist, but it's in the documentation now.**\n\n **.. method:: non_existing_function()**\n\n **And this function does not exist either.**\n\n```", "```py\n**Spam: :class:`spam.Spam`**\n\n```", "```py\n**> intersphinx: link between Sphinx documentation**\n **of different projects (y/n) [n]: y**\n\n```", "```py\n**intersphinx_mapping = {'https://docs.python.org/': None}**\n\n```", "```py\n**intersphinx_mapping = {**\n **'https://docs.python.org/': None,**\n **'sphinx': ('http://sphinx-doc.org/', None),**\n**}**\n\n```", "```py\n**Link to the intersphinx module: :mod:`sphinx.ext.intersphinx`**\n\n```", "```py\n**:param amount: The amount of eggs to return**\n**:type amount: int**\n\n```", "```py\n**Args:**\n **amount (int): The amount of eggs to return**\n\n```", "```py\n**Parameters**\n**----------**\n**amount : int**\n **The amount of eggs to return**\n\n```", "```py\ndef eggs(amount: int):\n    pass\n```", "```py\n**class Spam(object):**\n **'''**\n **The Spam object contains lots of spam**\n\n **:param arg: The arg is used for ...**\n **:type arg: str**\n **:param `*args`: The variable arguments are used for ...**\n **:param `**kwargs`: The keyword arguments are used for ...**\n **:ivar arg: This is where we store arg**\n **:vartype arg: str**\n **'''**\n **def __init__(self, arg, *args, **kwargs):**\n **self.arg = arg**\n\n **def eggs(self, amount, cooked):**\n **'''We can't have spam without eggs, so here's the eggs**\n\n **:param amount: The amount of eggs to return**\n **:type amount: int**\n **:param bool cooked: Should the eggs be cooked?**\n **:raises: :class:`RuntimeError`: Out of eggs**\n\n **:returns: A bunch of eggs**\n **:rtype: Eggs**\n **'''**\n **pass**\n\n```", "```py\n**class Spam(object):**\n **'''**\n **The Spam object contains lots of spam**\n\n **Args:**\n **arg (str): The arg is used for ...**\n ***args: The variable arguments are used for ...**\n ****kwargs: The keyword arguments are used for ...**\n\n **Attributes:**\n **arg (str): This is where we store arg,**\n **'''**\n **def __init__(self, arg, *args, **kwargs):**\n **self.arg = arg**\n\n **def eggs(self, amount, cooked):**\n **'''We can't have spam without eggs, so here's the eggs**\n\n **Args:**\n **amount (int): The amount of eggs to return**\n **cooked (bool): Should the eggs be cooked?**\n\n **Raises:**\n **RuntimeError: Out of eggs**\n\n **Returns:**\n **Eggs: A bunch of eggs**\n **'''**\n **pass**\n\n```", "```py\n**class Spam(object):**\n **'''**\n **The Spam object contains lots of spam**\n\n **Parameters**\n **----------**\n **arg : str**\n **The arg is used for ...**\n ***args**\n **The variable arguments are used for ...**\n ****kwargs**\n **The keyword arguments are used for ...**\n\n **Attributes**\n **----------**\n **arg : str**\n **This is where we store arg,**\n **'''**\n **def __init__(self, arg, *args, **kwargs):**\n **self.arg = arg**\n\n **def eggs(self, amount, cooked):**\n **'''We can't have spam without eggs, so here's the eggs**\n\n **Parameters**\n **----------**\n **amount : int**\n **The amount of eggs to return**\n **cooked : bool**\n **Should the eggs be cooked?**\n\n **Raises**\n **------**\n **RuntimeError**\n **Out of eggs**\n\n **Returns**\n **-------**\n **Eggs**\n **A bunch of eggs**\n **'''**\n **pass**\n\n```"]