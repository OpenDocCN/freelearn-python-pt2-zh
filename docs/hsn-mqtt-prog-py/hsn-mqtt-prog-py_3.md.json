["```py\nopenssl genrsa -out ca.key 2048\n```", "```py\nGenerating RSA private key, 2048 bit long modulus\n......+++\n.............+++\ne is 65537 (0x010001)\n```", "```py\nopenssl req -x509 -new -nodes -key ca.key -sha256 -days 3650 -out ca.crt\n```", "```py\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:NEW YORK CITY\nLocality Name (eg, city) []:NEW YORK\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:MOSQUITTO CERTIFICATE AUTHORITY\nOrganizational Unit Name (eg, section) []:\nCommon Name (e.g. server FQDN or YOUR name) []:MOSQUITTO CERTIFICATE AUTHORITY\nEmail Address []:mosquittoca@example.com\n```", "```py\nCertificate:\n Data:\n Version: 3 (0x2)\n Serial Number:\n 96:f6:f6:36:ad:63:b2:1f\n Signature Algorithm: sha256WithRSAEncryption\n Issuer: C = US, ST = NEW YORK, L = NEW YORK, O = MOSQUITTO \n        CERTIFICATE AUTHORITY, CN = MOSQUITTO CERTIFICATE AUTHORITY, \n        emailAddress = mosquittoca@example.com\n Validity\n Not Before: Mar 22 15:43:23 2018 GMT\n Not After : Mar 19 15:43:23 2028 GMT\n Subject: C = US, ST = NEW YORK, L = NEW YORK, O = MOSQUITTO \n            CERTIFICATE AUTHORITY, CN = MOSQUITTO CERTIFICATE \n            AUTHORITY, emailAddress = mosquittoca@example.com\n Subject Public Key Info:\n Public Key Algorithm: rsaEncryption\n Public-Key: (2048 bit)\n Modulus:\n 00:c0:45:aa:43:d4:76:e7:dc:58:9b:19:85:5d:35:\n 54:2f:58:61:72:6a:42:81:f9:64:1b:51:18:e1:95:\n ba:50:99:56:c5:9a:c2:fe:07:8e:26:12:47:a6:be:\n 8b:ce:23:bf:4e:5a:ea:ab:2e:51:99:0f:23:ea:38:\n 68:f3:80:16:5d:5f:51:cf:ce:ee:c9:e9:3a:34:ac:\n ee:24:a6:50:31:59:c5:db:75:b3:33:0e:96:31:23:\n 1b:9c:6f:2f:96:1f:6d:cc:5c:4e:20:10:9e:f2:4e:\n a9:f6:31:83:54:11:b6:af:86:0e:e0:af:69:a5:b3:\n f2:5a:b5:da:b6:64:73:87:86:bb:e0:be:b3:10:9f:\n ef:91:8f:e5:68:8c:ab:38:75:8d:e1:33:bc:fb:00:\n d8:d6:d2:d3:6e:e3:a0:3f:08:b6:9e:d6:da:94:ad:\n 61:74:90:6c:71:98:88:e8:e1:2b:2d:b1:18:bb:6d:\n b8:65:43:cf:ac:79:ab:a7:a4:3b:65:a8:8a:6f:be:\n c1:66:71:d6:9c:2d:d5:0e:81:13:69:23:65:fa:d3:\n cb:79:e5:75:ea:a2:22:72:c7:e4:f7:5c:be:e7:64:\n 9b:54:17:dd:ca:43:7f:93:be:b6:39:20:e7:f1:21:\n 0f:a7:e6:24:99:57:9b:02:1b:6d:e4:e5:ee:ad:76:\n 2f:69\n Exponent: 65537 (0x10001)\n X509v3 extensions:\n X509v3 Subject Key Identifier:\n F7:C7:9E:9D:D9:F2:9D:38:2F:7C:A6:8F:C5:07:56:57:48:7D:07:35\n X509v3 Authority Key Identifier: keyid:F7:C7:9E:9D:D9:F2:9D:38:2F:7C:A6:8F:C5:07:56:57:48:7D:07:35\n X509v3 Basic Constraints: critical\n CA:TRUE\n Signature Algorithm: sha256WithRSAEncryption\n a2:64:5d:7b:f4:85:81:f7:d0:30:8b:8d:7c:83:83:63:2c:4e:\n a8:56:fb:fc:f0:4f:d4:d8:9c:cd:ac:c7:e9:bc:4b:b5:87:9e:\n 02:0b:9f:e0:4b:a3:da:3f:84:b4:1c:e3:42:d4:9f:4e:c0:29:\n f7:ae:18:d3:2d:bf:93:e2:2b:5c:d9:9a:82:53:d8:6a:fb:c8:\n 47:9f:02:d4:05:11:e9:8f:2a:54:09:c4:a4:f1:00:eb:35:1d:\n 6b:e9:55:3b:4b:a6:27:d0:52:cf:86:c1:03:32:ce:22:41:55:\n 32:1e:93:4f:6b:a5:b5:19:9e:8c:a7:de:91:2b:2c:c6:95:a9:\n b6:44:18:e7:40:23:38:87:5d:89:b6:25:d7:32:60:28:0b:41:\n 5b:6e:46:20:bf:36:9d:ba:26:6d:63:71:0f:fd:c3:e3:0d:6b:\n b6:84:34:06:ea:67:7c:4e:2e:df:fe:b6:ec:48:f5:7b:b5:06:\n c5:ad:6f:3e:0c:25:2b:a3:9d:49:f7:d4:b7:69:9e:3e:ca:f8:\n 65:f2:77:ae:50:63:2b:48:e0:72:93:a7:60:99:b7:40:52:ab:\n 6f:00:78:89:ad:92:82:93:e3:30:ab:ac:24:e7:82:7f:51:c7:\n 2d:e7:e1:2d:3f:4d:c1:5c:27:15:d9:bc:81:7b:00:a0:75:07:\n 99:ee:78:70\n```", "```py\nopenssl genrsa -out server.key 2048\n```", "```py\nGenerating RSA private key, 2048 bit long modulus\n..................................................................................................+++\n..............................................................................................................................+++\ne is 65537 (0x010001)\n```", "```py\nopenssl req -new -key server.key -out server.csr\n```", "```py\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:FLORIDA\nLocality Name (eg, city) []:ORLANDO\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:MQTT 3.1.1 SERVER\nOrganizational Unit Name (eg, section) []:MQTT\nCommon Name (e.g. server FQDN or YOUR name) []:192.168.1.1\nEmail Address []:mosquittoserver@example.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:\nAn optional company name []:Mosquitto MQTT Server\n```", "```py\nopenssl x509 -req -in server.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out server.crt -days 3650 -sha256\n```", "```py\nSignature ok\nsubject=C = US, ST = FLORIDA, L = ORLANDO, O = MQTT 3.1.1 SERVER, OU = MQTT, CN = 192.168.1.1, emailAddress = mosquittoserver@example.com\nGetting CA Private Key\n```", "```py\nopenssl x509 -in server.crt -noout -text\n```", "```py\nCertificate:\n Data:\n Version: 1 (0x0)\n Serial Number:\n a1:fa:a7:26:53:da:24:0b\n Signature Algorithm: sha256WithRSAEncryption\n Issuer: C = US, ST = NEW YORK, L = NEW YORK, O = MOSQUITTO     \n        CERTIFICATE AUTHORITY, CN = MOSQUITTO CERTIFICATE AUTHORITY, \n        emailAddress = mosquittoca@example.com\n Validity\n Not Before: Mar 22 18:20:01 2018 GMT\n Not After : Mar 19 18:20:01 2028 GMT\n Subject: C = US, ST = FLORIDA, L = ORLANDO, O = MQTT 3.1.1 \n        SERVER, OU = MQTT, CN = 192.168.1.1, emailAddress = \n        mosquittoserver@example.com\n Subject Public Key Info:\n Public Key Algorithm: rsaEncryption\n Public-Key: (2048 bit)\n Modulus:\n 00:f5:8b:3e:76:0a:ab:65:d2:ee:3e:47:6e:dc:be:\n 74:7e:96:5c:93:25:45:54:a4:97:bc:4d:34:3b:ed:\n 33:89:39:f4:df:8b:cd:9f:63:fa:4d:d4:01:c8:a5:\n 0b:4f:c7:0d:35:a0:9a:20:4f:66:be:0e:4e:f7:1a:\n bc:4a:86:a7:1f:69:30:36:01:2f:93:e6:ff:8f:ca:\n 1f:d0:58:fa:37:e0:90:5f:f8:06:7c:2c:1c:c7:21:\n c8:b4:12:d4:b7:b1:4e:5e:6d:41:68:f3:dd:03:33:\n f5:d5:e3:de:37:08:c4:5f:8c:db:21:a2:d7:20:12:\n f2:a4:81:20:3d:e4:d7:af:81:32:82:31:a2:2b:fd:\n 02:c2:ee:a0:fa:53:1b:ca:2d:43:b3:7e:b7:b8:12:\n 9c:3e:26:66:cd:90:34:ba:aa:6b:ad:e4:eb:0d:15:\n cf:0b:ce:f6:b1:07:1f:7c:33:05:11:4b:57:6c:48:\n 0d:f8:e5:f3:d3:f0:88:92:53:ec:3e:04:d7:fc:81:\n 75:5e:ef:01:56:f1:66:fe:a4:34:9b:13:8a:b6:5d:\n cc:8f:72:11:0e:9c:c9:65:71:e3:dd:0e:5a:b7:9d:\n 8f:18:3e:09:62:52:5f:fa:a5:96:4d:2b:35:23:26:\n ca:74:5d:f9:04:64:f1:f8:f6:f6:7a:d7:31:4c:b7:\n e8:53\n Exponent: 65537 (0x10001)\n Signature Algorithm: sha256WithRSAEncryption\n 9c:2f:b5:f9:fa:06:9f:a3:1e:a3:38:94:a7:aa:4c:11:e9:30:\n 2e:4b:cf:16:a3:c6:46:ad:e5:3b:d9:43:f0:41:37:62:93:94:\n 72:56:1a:dd:27:50:f7:89:2f:4b:56:55:59:d6:da:2e:8f:0a:\n d8:1e:dd:41:0e:1c:36:1b:eb:8d:32:2c:24:ef:58:93:18:e1:\n fc:ce:71:f6:b2:ed:84:5e:06:52:b8:f1:87:f3:13:ca:b9:41:\n 3f:a2:1d:a0:52:5d:52:37:6c:2b:8c:28:ab:7f:7d:ed:fc:07:\n 9f:60:8b:ad:3d:48:17:95:fe:20:b8:96:87:44:9a:32:b8:9c:\n a8:d7:3c:cf:98:ba:a4:5c:c9:6e:0c:10:ee:45:3a:23:4a:e8:\n 34:28:63:c4:8e:6e:1b:d9:a0:1b:e5:cc:33:69:ae:6f:e1:bb:\n 99:df:04:fa:c9:bd:8c:c5:c7:e9:a9:fd:f2:dc:2c:b3:a9:7c:\n 8a:ef:bf:66:f6:09:01:9a:0e:8f:27:a4:a1:45:f7:90:d2:bb:\n 6d:4f:12:46:56:29:85:cd:c8:d6:d7:d3:60:e4:d1:27:a3:88:\n 52:41:6a:7d:b2:06:8e:10:ec:ae:b5:7e:58:3e:ae:33:7c:f7:\n 3a:21:a6:ae:61:5f:4d:c8:44:86:48:3d:c4:32:f2:db:05:e9:\n c9:f1:0c:be\n```", "```py\nsudo service mosquitto stop\n```", "```py\n# MQTT over TLS\nlistener 8883\ncafile /usr/local/etc/mosquitto/certificates/ca.crt\ncertfile /usr/local/etc/mosquitto/certificates/server.crt\nkeyfile /usr/local/etc/mosquitto/certificates/server.key\n```", "```py\n# MQTT over TLS\nlistener 8883\ncafile C:\\Program Files (x86)\\mosquitto\\certificates\\ca.crt\ncertfile C:\\Program Files (x86)\\mosquitto\\certificates\\server.crt\nkeyfile C:\\Program Files (x86)\\mosquitto\\certificates\\server.key\n```", "```py\nmosquitto_sub -V mqttv311 -t sensors/octocopter01/altitude -d\n```", "```py\nError: No connection could be made because the target machine actively refused it.\n```", "```py\nmosquitto_sub -V mqttv311 -p 8883 -t sensors/octocopter01/altitude -d\n```", "```py\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\n```", "```py\nmosquitto_sub -h 192.168.1.1 -V mqttv311 -p 8883 --cafile ca.crt -t sensors/octocopter01/altitude -d\n```", "```py\nClient mosqsub|14064-LAPTOP-5D sending CONNECT\nError: A TLS error occurred.\n```", "```py\nmosquitto_pub -h 192.168.1.1 -V mqttv311 -p 8883 --cafile ca.crt -t sensors/octocopter01/altitude -m \"123 f\" -d\n```", "```py\nopenssl genrsa -out board001.key 2048\n```", "```py\nGenerating RSA private key, 2048 bit long modulus\n..........................................................................................+++\n.....................................+++\ne is 65537 (0x10001)\n```", "```py\nopenssl req -new -key board001.key -out board001.csr\n```", "```py\nYou are about to be asked to enter information that will be incorporated\ninto your certificate request.\nWhat you are about to enter is what is called a Distinguished Name or a DN.\nThere are quite a few fields but you can leave some blank\nFor some fields there will be a default value,\nIf you enter '.', the field will be left blank.\n-----\nCountry Name (2 letter code) [AU]:US \nState or Province Name (full name) [Some-State]:CALIFORNIA\nLocality Name (eg, city) []:SANTA MONICA\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:MQTT BOARD 001\nOrganizational Unit Name (eg, section) []:MQTT BOARD 001\nCommon Name (e.g. server FQDN or YOUR name) []:MQTT BOARD 001\nEmail Address []:mttboard001@example.com\n\nPlease enter the following 'extra' attributes\nto be sent with your certificate request\nA challenge password []:.\nAn optional company name []:.\n```", "```py\nopenssl x509 -req -in board001.csr -CA ca.crt -CAkey ca.key -CAcreateserial -out board001.crt -days 3650 -sha256 -addtrust clientAuth\n```", "```py\nSignature ok\nsubject=/C=US/ST=CALIFORNIA/L=SANTA MONICA/O=MQTT BOARD 001/OU=MQTT BOARD 001/CN=MQTT BOARD 001/emailAddress=mttboard001@example.com\nGetting CA Private Key\n```", "```py\nopenssl x509 -in board001.crt -noout -text\n```", "```py\nCertificate:\n Data:\n Version: 1 (0x0)\n Serial Number:\n dd:34:7a:3c:a6:cd:c1:94\n Signature Algorithm: sha256WithRSAEncryption\n Issuer: C=US, ST=CALIFORNIA, L=SAN FRANCISCO, O=CERTIFICATE \n AUTHORITY, CN=CERTIFICATE \n AUTHORITY/emailAddress=CERTIFICATE@EXAMPLE.COM\n Validity\n Not Before: Mar 23 22:10:05 2018 GMT\n Not After : Mar 20 22:10:05 2028 GMT\n Subject: C=US, ST=CALIFORNIA, L=SANTA MONICA, O=MQTT BOARD 001, \n OU=MQTT BOARD 001, CN=MQTT BOARD \n 001/emailAddress=mttboard001@example.com\n Subject Public Key Info:\n Public Key Algorithm: rsaEncryption\n RSA Public Key: (2048 bit)\n Modulus (2048 bit):\n 00:d0:9c:dd:9f:3e:db:3f:15:9c:23:40:12:5f:4e:\n 56:2a:30:34:df:88:51:d7:ca:61:bb:99:b5:ab:b4:\n a6:61:e9:f1:ed:2e:c3:61:7a:f2:0b:70:5b:24:7a:\n 12:3f:cb:5d:76:f7:10:b2:08:24:94:31:0d:80:35:\n 78:2c:19:70:8b:c0:fe:c1:cb:b2:13:5e:9a:d3:68:\n 5d:4d:78:47:5a:a3:d5:63:cd:3c:2f:8b:b1:48:4d:\n 12:11:0b:02:17:f3:4c:56:91:67:9f:98:3d:90:1f:\n 47:09:c0:1b:3a:04:09:2f:b9:fe:f1:e9:df:38:35:\n f8:12:ee:59:96:b1:ca:57:90:53:19:2b:4f:d3:45:\n 9e:f2:6a:09:95:46:f9:68:6b:c6:4e:89:33:78:4f:\n 0f:5b:2f:d3:00:d0:12:d7:ca:92:df:f4:86:6e:22:\n 9d:63:a2:f7:de:09:f4:8c:02:ad:03:9c:13:7b:b4:\n 9e:03:d6:99:f4:c0:3f:3f:c3:31:52:12:f1:66:cd:\n 22:5d:48:fb:7f:ca:ac:84:cf:24:c5:c4:85:af:61:\n de:59:84:a8:e0:fd:ce:44:5d:f2:85:c0:5d:f2:c5:\n ec:71:04:2c:83:94:cd:71:a1:14:1b:f7:e4:1b:b4:\n 2f:12:70:cb:b7:17:9e:db:c9:23:d1:56:bd:f5:02:\n c8:3b\n Exponent: 65537 (0x10001)\n\n Signature Algorithm: sha256WithRSAEncryption\n 55:6a:69:0f:3a:e5:6f:d4:16:0a:4f:67:46:ec:36:ea:a4:54:\n db:04:86:e9:48:ed:0e:83:52:56:75:65:f0:85:34:32:75:0a:\n 0a:15:13:73:21:a4:a9:9c:89:b4:73:15:06:2a:b3:e8:ab:7b:\n f4:16:37:17:a9:0e:eb:74:1d:78:c8:df:5e:5f:41:af:53:ca:\n a1:94:d8:d2:f5:87:a5:a9:8a:6a:d1:0e:e0:b7:30:92:d2:94:\n 98:65:4c:bf:f9:a7:60:f8:c2:df:7c:4e:28:3c:02:f0:d4:a8:\n f7:16:d5:38:88:43:e4:c4:2e:02:72:ee:4b:6f:cd:2a:d7:3b:\n c4:e8:f4:7d:0e:3b:9b:5b:20:00:69:75:76:ce:79:a1:ed:25:\n f7:f1:3c:96:f8:7d:35:dd:5c:f8:4d:d2:04:32:bb:41:b2:3d:\n 1a:5d:f6:63:ff:63:48:ec:85:c2:b3:9c:02:d3:ad:17:59:46:\n 3e:10:6f:82:2f:d8:ef:6c:a5:42:3f:55:74:bb:f6:17:59:a0:\n 39:e5:16:55:a3:f9:5a:b5:04:c0:61:2a:55:32:56:c2:12:0a:\n 2c:c8:8a:23:b1:60:d5:a3:93:f3:a0:e4:e0:a8:98:3b:e1:83:\n ea:43:06:bc:d0:96:0b:c2:0b:95:6b:ce:39:02:7f:19:01:ea:\n 47:83:25:c5\n Trusted Uses:\n TLS Web Client Authentication\n No Rejected Uses.\n```", "```py\nrequire_certificate true\n```", "```py\nmosquitto_sub -h 192.168.1.1 -V mqttv311 -p 8883 --cafile ca.crt --cert board001.crt --key board001.key -t sensors/+/altitude -d\n```", "```py\nmosquitto_pub -h 192.168.1.1 -V mqttv311 -p 8883 --cafile ca.crt --cert board001.crt --key board001.key -t sensors/quadcopter12/altitude -m \"361 f\" -d\n```", "```py\ntls_version tlsv1.2\n```", "```py\nmosquitto_pub -h 192.168.1.1 --tls-version tlsv1.2 -V mqttv311 -p 8883 --cafile ca.crt -t sensors/octocopter01/altitude -m \"1025 f\" -d\n```"]