["```py\nimport my_module\n```", "```py\nmy_module.do_something()\nprint(my_module.variable)\n```", "```py\nimport my_package.my_module\nmy_package.my_module.do_something()\n```", "```py\nfrom my_package import my_module\nmy_module.do_something()\n```", "```py\nfrom my_package.my_sub_package import my_module\nmy_module.do_something()\n```", "```py\ndef foo():\n    print(\"in foo\")\n\ndef bar():\n    print(\"in bar\")\n\nmy_var = 0\n\nprint(\"importing test module\")\n```", "```py\n% import test_module\n```", "```py\nimporting test module\n```", "```py\n% my_module.foo()\nin foo\n% my_module.bar()\nin bar\n% print(my_module.my_var)\n0\n% my_module.my_var = 1\n% print(my_module.my_var)\n1\n```", "```py\ndef init():\n    global my_var\n    my_var = 0\n```", "```py\ndef say_hello():\n    print(\"hello\")\n```", "```py\nimport my_package\nmy_package.say_hello()\n```", "```py\nfrom test_package.test_module import say_hello\n```", "```py\n    import math\n    print(math.pi)\n    ```", "```py\n    from math import pi\n    print(pi)\n    ```", "```py\n**>>> print(globals())**\n\n```", "```py\n**{'__package__': None, '__doc__': None, '__name__': '__main__', '__builtins__': <module 'builtins' (built-in)>, '__loader__': <class '_frozen_importlib.BuiltinImporter'>}**\n\n```", "```py\n**>>> def test():**\n**...     print(\"Hello\")**\n**...**\n**>>>**\n\n```", "```py\n**>>> print(globals())**\n**{...'test': <function test at 0x1028225f0>...}**\n\n```", "```py\n**>>> test()**\n**Hello**\n\n```", "```py\n**>>> import string**\n**>>> print(globals())**\n**{...'string': <module 'string' from '/Library/Frameworks/Python.framework/Versions/3.3/lib/python3.3/string.py'>...}**\n\n```", "```py\n**>>> print(string.capwords(\"this is a test\"))**\n**This Is A Test**\n\n```", "```py\n**>>> from string import capwords**\n**>>> print(globals())**\n**{...'capwords': <function capwords at 0x1020fb7a0>...}**\n\n```", "```py\nimport string, math, datetime, random\n```", "```py\nfrom math import pi, radians, sin\n```", "```py\nfrom math import pi, degrees, radians, sin, cos, \\\n                 tan, hypot, asin, acos, atan, atan2\n\nfrom math import (pi, degrees, radians, sin, cos, \n                  tan, hypot, asin, acos, atan, atan2)\n```", "```py\nimport math as math_ops\n```", "```py\nprint(math_ops.pi)\n```", "```py\n    from package1 import utils as utils1\n    from package2 import utils as utils2\n    ```", "```py\nfrom reports import customers as customer_report\nfrom database import customers as customer_data\n```", "```py\nfrom math import *\n```", "```py\nfrom program.gui.widgets.editor import slider\n```", "```py\nfrom . import slider\n```", "```py\nfrom .editor import slider\n```", "```py\nfrom .. import controls\n```", "```py\nfrom ...dialogs.errors import errDialog\n```", "```py\nA = 1\nB = 2\nC = 3\n__all__ = [\"A\", \"B\"]\n```", "```py\n__all__ = [\"module_1\", \"module_2\", \"sub_package\"]\n```", "```py\nimport module1\nimport module2\nimport sub_package\n```", "```py\n# module_1.py\n\nfrom module_2 import calc_markup\n\ndef calc_total(items):\n    total = 0\n    for item in items:\n        total = total + item['price']\n    total = total + calc_markup(total)\n    return total\n\n# module_2.py\n\nfrom module_1 import calc_total\n\ndef calc_markup(total):\n    return total * 0.1\n\ndef make_sale(items):\n    total_price = calc_total(items)\n    ...\n```", "```py\n**ImportError: cannot import name calc_total**\n\n```", "```py\ndef main():\n    ...\n\nif __name__ == \"__main__\":\n    main()\n```", "```py\ndef double(n):\n    return n * 2\n\nif __name__ == \"__main__\":\n    print(\"double(3) =\", double(3))\n```", "```py\n**% python double.py** \n**double(3) = 6**\n\n```", "```py\ndef funky_case(s):\n    letters = []\n    capitalize = False\n    for letter in s:\n        if capitalize:\n            letters.append(letter.upper())\n        else:\n            letters.append(letter.lower())\n        capitalize = not capitalize\n    return \"\".join(letters)\n```", "```py\nfrom funkycase import funky_case\ns = funky_case(\"Test String\")\n```", "```py\nif __name__ == \"__main__\":\n    if len(sys.argv) != 2:\n        print(\"You must supply exactly one string!\")\n    else:\n        s = sys.argv[1]\n        print(funky_case(s))\n```", "```py\nimport sys\n```", "```py\n**% python funkycase.py \"The quick brown fox\"**\n**tHe qUiCk bRoWn fOx**\n\n```", "```py\n**python -m my_module.py**\n\n```"]