["```py\nimport math\nassert math.floor(2.6197) == 2\n```", "```py\nimport unittest\nimport quantities\n\nclass TestQuantities(unittest.TestCase):\n    def setUp(self):\n        quantities.init(\"us\")\n\n    def test_new(self):\n        q = quantities.new(12, \"km\")\n        self.assertEqual(quantities.value(q), 12)\n        self.assertEqual(quantities.units(q), \"kilometer\")\n\n    def test_convert(self):\n        q1 = quantities.new(12, \"km\")\n        q2 = quantities.convert(q1, \"m\")\n        self.assertEqual(quantities.value(q2), 12000)\n        self.assertEqual(quantities.units(q2), \"meter\")\n\nif __name__ == \"__main__\":\n    unittest.main()\n```", "```py\n**python test_quantities.py**\n\n```", "```py\n**..**\n**---------------------------------------------------------------**\n**Ran 2 tests in 0.000s**\n\n**OK**\n\n```", "```py\n    unittest.main(verbosity=2)\n```", "```py\n**python test_quantities.py -v**\n\n```", "```py\nq = quantities.new(12, \"km\")\nwith self.assertRaises(ValueError):\n    quantities.convert(q, \"kg\")\n```", "```py\n[1] def calc_score(x, y):\n[2]     if x == 1:\n[3]         score = y * 10\n[4]     elif x == 2:\n[5]         score = 25 + y\n[6]     else:\n[7]         score = y\n[8]\n[9]     return score\n```", "```py\nassert calc_score(1, 5) == 50\nassert calc_score(2, 10) == 35\n```", "```py\n**python test.py**\n\n```", "```py\n**git --version**\n\n```", "```py\n**git clone https://<username>@github.com/<username>/test-package.git .**\n\n```", "```py\n**$ ls -al**\n**drwxr-xr-x@  7 erik  staff   238 19 Feb 21:28 .**\n**drwxr-xr-x@  7 erik  staff   238 19 Feb 14:35 ..**\n**drwxr-xr-x@ 14 erik  staff   476 19 Feb 21:28 .git**\n**-rw-r--r--@  1 erik  staff   844 19 Feb 15:09 .gitignore**\n\n```", "```py\n<username>-test-package\n```", "```py\n<username>-test-package\n-----------------------\n\nThis is a simple test package. To use it, type::\n\n    from <username>_test_package import test\n    test.run()\n```", "```py\nimport string\nimport random\n\ndef random_name():\n    chars = []\n    for i in range(random.randrange(3, 10)):\n        chars.append(random.choice(string.ascii_letters))\n    return \"\".join(chars)\n\ndef run():\n    for i in range(10):\n        print(random_name())\n```", "```py\n**git status**\n\n```", "```py\n**# On branch master**\n**# Untracked files:**\n**#   (use \"git add <file>...\" to include in what will be committed)**\n**#**\n**#  README.rst**\n**#  <username>_test_package/**\n**nothing added to commit but untracked files present (use \"git add\" to track)**\n\n```", "```py\n**git add README.rst**\n**git add <username>_test_package**\n\n```", "```py\n**# On branch master**\n**# Changes to be committed:**\n**#   (use \"git reset HEAD <file>...\" to unstage)**\n**#**\n**#  new file:   README.rst**\n**#  new file:   <username>_test_package/__init__.py**\n**#  new file:   <username>_test_package/test.py**\n\n```", "```py\n**git commit -a -m 'Initial commit.'**\n\n```", "```py\n**git push**\n\n```", "```py\nfrom distutils.core import setup\n\nsetup(name=\"<username>-test-package\",\n      packages=[\"<username>_test_package\"],\n      version=\"1.0\",\n      description=\"Test Package\",\n      author=\"<your name>\",\n      author_email=\"<your email address>\",\n      url=\"https://github.com/<username>/test-package\",\n      download_url=\"https://github.com/<username>/test-package/tarball/1.0\",\n      keywords=[\"test\", \"python\"],\n      classifiers=[])\n```", "```py\n**python setup.py register**\n\n```", "```py\n**python setup.py sdist upload**\n\n```", "```py\n**git tag 1.0 -m 'Version 1.0 of the <username>_test_package.'**\n\n```", "```py\n**git push --tags**\n\n```", "```py\n**pip install <username>_test_package**\n\n```", "```py\n**sudo pip install <username>_test_package**\n\n```", "```py\n**>>> from <username>_test_package import test**\n**>>> test.run()**\n**IFIbH**\n**AAchwnW**\n**qVtRUuSyb**\n**UPF**\n**zXkY**\n**TMJEAZm**\n**wRJCqgomV**\n**oMzmv**\n**LaDeVg**\n**RDfMqScM**\n\n```", "```py\n**pip install <username>_test_package == 1.0**\n\n```", "```py\n**pip install --upgrade <username>_test_package**\n\n```", "```py\n**pip list**\n\n```", "```py\nDjango==1.8.2\nPillow==3.0.0\nreportlab==3.2.0\n```", "```py\n**pip install -r requirements.txt**\n\n```", "```py\n**pip freeze > requirements.txt**\n\n```"]