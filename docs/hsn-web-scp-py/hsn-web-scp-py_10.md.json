["```py\nimport requests\nurl = 'https://api.sunrise-sunset.org/json?lat=27.7172&lng=85.3239&date=2019-03-04'   results = requests.get(url) #request url\nprint(\"Status Code: \", results.status_code)\nprint(\"Headers-ContentType: \", results.headers['Content-Type'])\nprint(\"Headers: \", results.headers)\n\njsonResult = results.json() #read JSON content\nprint(\"Type JSON Results\",type(jsonResult))\nprint(jsonResult)\nprint(\"SunRise & Sunset: \",jsonResult['results']['sunrise'],\" & \",jsonResult['results']['sunset'])\n```", "```py\n**Type Results <class 'requests.models.Response'>**\n**Status Code: 200**\n**Headers-ContentType: application/json**\n\n**Headers: {'Access-Control-Allow-Origin':'*','Content-Type':'application/json','Vary':'Accept-Encoding', 'Server':'nginx','Connection':'keep-alive','Content-Encoding':'gzip','Transfer-Encoding':'chunked','Date': 'Mon, 04 Mar 2019 07:48:29 GMT'}**\n\n**Type JSON Results <class 'dict'>**\n\n**{'status':'OK','results':{'civil_twilight_end':'12:44:16 PM','astronomical_twilight_end':'1:38:31 PM', 'civil_twilight_begin':'12:16:32 AM','sunrise':'12:39:54 AM',......,'sunset':'12:20:54 PM','solar_noon': '6:30:24 AM','day_length':'11:41:00'}}**\n\n**SunRise & Sunset: 12:39:54 AM & 12:20:54 PM** \n```", "```py\nimport requests\nimport json\nurl = 'https://api.twitter.com/1.1/search/tweets.json?q='  \nresults = requests.get(url)\nprint(\"Status Code: \", results.status_code)\nprint(\"Headers: Content-Type: \", results.headers['Content-Type'])\n\njsonResult = results.content    #jsonResult = results.json() print(jsonResult)\n\njsonFinal = json.loads(jsonResult.decode())\nprint(jsonFinal) #print(json.loads(requests.get(url).content.decode()))   if results.status_code==400:\n print(jsonFinal['errors'][0]['message'])\nelse:\n pass\n```", "```py\nStatus Code: 400\nHeaders: Content-Type: application/json; charset=utf-8\n\nb'{\"errors\":[{\"code\":215,\"message\":\"Bad Authentication data.\"}]}'\n{'errors': [{'message': 'Bad Authentication data.', 'code': 215}]}\n\nBad Authentication data.\n```", "```py\nimport requests\nurl = 'https://api.github.com'  #First Request results = requests.get(url)\nprint(\"Status Code: \", results.status_code)\nprint(\"Headers: \", results.headers)\n\n#Second Request with 'headers'\netag = results.headers['ETag']\nprint(\"ETag: \",etag)\n\nresults = requests.get(url, headers={'If-None-Match': etag})\nprint(\"Status Code: \", results.status_code)\n```", "```py\nStatus Code: 200\nHeaders: Content-Type: application/json; charset=utf-8\nHeaders: {'X-GitHub-Request-Id': 'A195:073C:37F223:79CCB0:5C8144B4', 'Status': '200 OK','ETag': 'W/\"7dc470913f1fe9bb6c7355b50a0737bc\"', 'Content-Encoding': 'gzip','Date': 'Thu, 07 Mar 2019 16:20:05 GMT',........, 'Content-Type': 'application/json; charset=utf-8', ....., 'Server': 'GitHub.com'}\n\nETag: W/\"7dc470913f1fe9bb6c7355b50a0737bc\"\nStatus Code: 304\n```", "```py\nimport requests\nimport json\ndataSet = []\n def readUrl(search):\n    results = requests.get(url+search)\n    print(\"Status Code: \", results.status_code)\n    print(\"Headers: Content-Type: \", results.headers['Content-Type'])\n  return results.json()\n```", "```py\nurl = 'http://universities.hipolabs.com/search?name=' jsonResult = readUrl('Wales') # print(jsonResult)  for university in jsonResult:\n    name = university['name']\n    url = university['web_pages'][0]\n    dataSet.append([name,url])\n print(\"Total Universities Found: \",len(dataSet))\nprint(dataSet)\n```", "```py\nStatus Code: 200 Headers: Content-Type: application/json Total Universities Found: 10 [['University of Wales', 'http://www.wales.ac.uk/'], ['University of Wales Institute, Cardiff', 'http://www.uwic.ac.uk/'], ......., ['University of Wales, Lampeter', 'http://www.lamp.ac.uk/'], ['University of Wales, Bangor', 'http://www.bangor.ac.uk/']]  \n```", "```py\nif __name__ == \"__main__\":\n    eventTypes=[] \n    #IssueCommentEvent,WatchEvent,PullRequestReviewCommentEvent,CreateEvent\n  for page in range(1, 4): #First 3 pages\n        events = readUrl('events?page=' + str(page))\n  for event in events:\n            id = event['id']\n            type = event['type']\n            actor = event['actor']['display_login']\n            repoUrl = event['repo']['url']\n            createdAt = event['created_at']\n            eventTypes.append(type)\n            dataSet.append([id, type, createdAt, repoUrl, actor])\n\n    eventInfo = dict(Counter(eventTypes))\n\n    print(\"Individual Event Counts:\", eventInfo)\n    print(\"CreateEvent Counts:\", eventInfo['CreateEvent'])\n    print(\"DeleteEvent Counts:\", eventInfo['DeleteEvent'])\n\nprint(\"Total Events Found: \", len(dataSet))\nprint(dataSet)\n```", "```py\nStatus Code: 200\nHeaders: Content-Type: application/json; charset=utf-8\n................\nStatus Code: 200\nHeaders: Content-Type: application/json; charset=utf-8\n\nIndividual Event Counts: {'IssueCommentEvent': 8, 'PushEvent': 42, 'CreateEvent': 12, 'WatchEvent': 9, 'PullRequestEvent': 10, 'IssuesEvent': 2, 'DeleteEvent': 2, 'PublicEvent': 2, 'MemberEvent': 2, 'PullRequestReviewCommentEvent': 1}\n\nCreateEvent Counts: 12\nDeleteEvent Counts: 2\nTotal Events Found: 90\n\n[['9206862975','PushEvent','2019-03-08T14:53:46Z','https://api.github.com/repos/CornerYoung/MDN','CornerYoung'],'https://api.github.com/repos/OUP/INTEGRATION-ANSIBLE','peter-masters'],.....................,'2019-03-08T14:53:47Z','https://api.github.com/repos/learn-co-curriculum/hs-zhw-shoes-layout','maxwellbenton']]\n```", "```py\nfrom collections import Counter\n```"]