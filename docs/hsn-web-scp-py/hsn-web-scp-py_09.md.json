["```py\nfrom pyquery import PyQuery as pq\nimport requests\nmainurl = \"http://toscrape.com/\" searchurl = \"http://quotes.toscrape.com/search.aspx\" filterurl = \"http://quotes.toscrape.com/filter.aspx\" quoteurl = \"http://quotes.toscrape.com/\" authorTags = [('Albert Einstein', 'success'), ('Thomas A. Edison', 'inspirational')]\n\ndef processRequests(url, params={}, customheaders={}):\n    if len(params) > 0:\n        response = requests.post(url, data=params, headers=customheaders)\n    else:\n        response = requests.get(url)   return pq(response.text)\n\nif __name__ == '__main__':\n    for authorTag in authorTags:\n        authorName,tagName= authorTag\n```", "```py\n#Step 1: load searchURL searchResponse = processRequests(searchurl)\nauthor = searchResponse.find('select#author option:contains(\"' + authorName + '\")').attr('value')\nviewstate = searchResponse.find('input#__VIEWSTATE').attr('value')\ntag = searchResponse.find('select#tag option').text()\n\nprint(\"Author: \", author)\nprint(\"ViewState: \", viewstate)\nprint(\"Tag: \", tag)\n```", "```py\nAuthor: Albert Einstein\nViewState: NTA2MjI4NmE1Y2Q3NGFhMzhjZTgxMzM4ZWU0NjU4MmUsQWxiZXJ0IEVpbnN0ZWluLEouSy4gUm93bGluZyxKYW5lIEF1c3Rlbi............BDdW1taW5ncyxLaGFsZWQgSG9zc2VpbmksSGFycGVyIExlZSxNYWRlbGVpbmUgTCdFbmdsZQ==\nTag: ----------\n\nAuthor: Thomas A. Edison\nViewState: ZjNhZTUwZDYzY2YyNDZlZmE5ODY0YTI5OWRhNDAyMDYsQWxiZXJ0IEVpbnN0ZWluLEouSy4gUm93bGluZyxKYW5lIEF1c3Rlbi............BDdW1taW5ncyxLaGFsZWQgSG9zc2VpbmksSGFycGVyIExlZSxNYWRlbGVpbmUgTCdFbmdsZQ==\nTag: ----------\n```", "```py\n#Step 2: load filterurl with author and default tag params = {'author': author, 'tag': tag, '__VIEWSTATE': viewstate}\ncustomheaders = {\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n    'Content-Type': 'application/x-www-form-urlencoded',\n    'Referer': searchurl\n}\n\nfilterResponse = processRequests(filterurl,params,customheaders)\nviewstate = filterResponse.find('input#__VIEWSTATE').attr('value')\ntagSuccess = filterResponse.find('select#tag option:contains(\"' + tagName + '\")').attr('value')\nsubmitButton = filterResponse.find('input[name=\"submit_button\"]').attr('value')\n print(\"Author: \", author)\nprint(\"ViewState: \", viewstate)\nprint(\"Tag: \", tagSuccess)\nprint(\"Submit: \", submitButton)\n```", "```py\nAuthor: Thomas A. Edison\nViewState: ZjNhZTUwZDYzY2YyNDZlZmE5ODY0YTI5OWRhNDAyMDYsQWxiZXJ0IEVpbnN0ZWluLEouSy4gUm93bGluZyxKYW5lIEF1c3Rlbi............BDdW1taW5ncyxLaGFsZWQgSG9zc2VpbmksSGFycGVyIExlZSxNYWRlbGVpbmUgTCdFbmdsZSwtLS0tLS0tLS0t\nTag: inspirational\nSubmit: Search\n```", "```py\nAuthor: Albert Einstein\nViewState: NTA2MjI4NmE1Y2Q3NGFhMzhjZTgxMzM4ZWU0NjU4MmUsQWxiZXJ0IEVpbnN0ZWluLEouSy4gUm93bGluZyxKYW5lIEF1c3Rlbi............BDdW1taW5ncyxLaGFsZWQgSG9zc2VpbmksSGFycGVyIExlZSxNYWRlbGVpbmUgTCdFbmdsZSwtLS0tLS0tLS0t\nTag: success\nSubmit: Search\n```", "```py\n#Step 3: load filterurl with author and defined tag params = {'author': author, 'tag': tagSuccess, 'submit_button': submitButton, '__VIEWSTATE': viewstate}  customheaders = {\n'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',\n'Content-Type': 'application/x-www-form-urlencoded',\n'Referer': filterurl\n}\n\nfinalResponse = processRequests(filterurl,params, customheaders)\n\n#Step 4: Extract results quote = finalResponse.find('div.quote span.content').text()\n\nquoteAuthor = finalResponse.find('div.quote span.author').text()\nmessage = finalResponse.find('div.quote span.tag').text()\nprint(\"Author: \", quoteAuthor, \"\\nMessage: \", message)\n```", "```py\nAuthor: Albert Einstein \nMessage: success\n```", "```py\nAuthor: Thomas A. Edison \nMessage: inspirational\n```", "```py\n#params={'author':author,'tag':tagSuccess,'submit_button':submitButton,'__VIEWSTATE':viewstate}\nparams={'author':author,'tag':tagSuccess,'submit_button':submitButton,'__VIEWSTATE':viewstate+\"TEST\"}\n#params={'author':author,'tag':tagSuccess,'submit_button':submitButton}\n......\nfinalResponse = processRequests(filterurl,params, customheaders)\n......\nprint(\"Author: \", quoteAuthor, \"\\nMessage: \", message)\n\n*Quote:* \n*Author:* \n*Message:*\n```", "```py\nfrom pyquery import PyQuery as pq\nimport requests\nmainUrl = \"http://testing-ground.scraping.pro\" loginUrl = \"http://testing-ground.scraping.pro/login\" logoutUrl = \"http://testing-ground.scraping.pro/login?mode=logout\" postUrl=\"http://testing-ground.scraping.pro/login?mode=login\"\n```", "```py\ndef responseCookies(response):\n    headers = response.headers\n    cookies = response.cookies\n    print(\"Headers: \", headers)\n    print(\"Cookies: \", cookies)\n\ndef processParams(params):\n    response = requests.post(postUrl, data=params)\n    responseB = pq(response.text)\n    message = responseB.find('div#case_login h3').text()\n    print(\"Confirm Login : \",message)\n\nif __name__ == '__main__': \n    requests.get(logoutUrl)\n\n    response = requests.get(mainUrl)\n    responseCookies(response)\n\n    response = requests.get(loginUrl)\n    responseCookies(response)\n```", "```py\nHeaders:{'Vary':'Accept-Encoding','Content-Type':'text/html','Connection':'Keep-Alive', ..........., 'Content-Encoding':'gzip','X-Powered-By':'PHP/5.4.4-14+deb7u12'}\nCookies: <RequestsCookieJar[]>\n\nHeaders:{'Vary':'Accept-Encoding','Content-Type':'text/html','Connection':'Keep-Alive',.............., 'Set-Cookie':'tdsess=deleted; expires=Thu, 01-Jan-1970 00:00:01 GMT',........., 'Keep-Alive':'timeout=5, max=100','X-Powered-By':'PHP/5.4.4-14+deb7u12'}\nCookies: <RequestsCookieJar[]>\n```", "```py\nresponseA = pq(response.text)\nusername = responseA.find('input[id=\"usr\"]').attr('name')\npassword = responseA.find('input[id=\"pwd\"]').attr('name')\n\n#Welcome : Success paramsCorrect = {username: 'admin', password: '12345'} #Success print(paramsCorrect)\nprocessParams(paramsCorrect)\n```", "```py\n{'pwd': '12345', 'usr': 'admin'}\nConfirm Login : WELCOME :)\n```", "```py\n paramsIncorrect = {username: 'admin', password: '123456'} #Access Denied\n  print(paramsIncorrect)\n processParams(paramsIncorrect)\n```", "```py\n{'pwd': '123456', 'usr': 'admin'}\nConfirm Login : ACCESS DENIED!\n```", "```py\nfrom pyquery import PyQuery as pq\nimport requests\nmainUrl = \"http://toscrape.com/\" loginUrl = \"http://quotes.toscrape.com/login\"  quoteUrl = \"http://quotes.toscrape.com/\"   def getCustomHeaders(cookieHeader):\n    return {\n        'Host': 'quotes.toscrape.com',\n        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:65.0) Gecko/20100101 Firefox/65.0',\n        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',\n        'Referer': 'http://quotes.toscrape.com/login',\n        'Content-Type': 'application/x-www-form-urlencoded', \n        'Cookie': cookieHeader\n    }\n\ndef responseCookies(response):\n    headers = response.headers\n    cookies = response.cookies\n    print(\"Headers: \", headers)\n    print(\"Cookies: \", cookies)\n    return headers['Set-Cookie']\n\nif __name__ == '__main__':\n```", "```py\nrequests.get(mainUrl)\nresponse = requests.get(loginUrl)\n\n```", "```py\nsetCookie = responseCookies(response)\nprint(\"Set-Cookie: \",setCookie)\n```", "```py\nHeaders: {'Set-Cookie': session=eyJjc3JmX3Rva2VuIjoicUlPVGNnQ2FKZmJaS3NOdmlIREFWbVdvWGtMakJkVXl1U3BScmVZTWhRd0d6dEZueFBsRSJ9.D68Log.3ANox76h0whpTRjkqNo7JRgCtWI; HttpOnly; Path=/',...,'Content-Encoding':'gzip','Content-Type':'text/html; charset=utf-8',......}\n\nCookies: <RequestsCookieJar[<Cookie session=eyJjc3JmX3Rva2VuIjoicUlPVGNnQ2FKZmJaS3NOdmlIREFWbVdvWGtMakJkVXl1U3BScmVZTWhRd0d6dEZueFBsRSJ9.D68Log.3ANox76h0whpTRjkqNo7JRgCtWI for quotes.toscrape.com/>]>\n\nSet-Cookie: session=eyJjc3JmX3Rva2VuIjoicUlPVGNnQ2FKZmJaS3NOdmlIREFWbVdvWGtMakJkVXl1U3BScmVZTWhRd0d6dEZueFBsRSJ9.D68Log.3ANox76h0whpTRjkqNo7JRgCtWI; HttpOnly; Path=/\n```", "```py\nresponseA = pq(response.text)\ncsrf_token = responseA.find('input[name=\"csrf_token\"]').attr('value')\nusername = responseA.find('input[id=\"username\"]').attr('name')\npassword = responseA.find('input[id=\"password\"]').attr('name')\n\nparams = {username: 'test', password: 'test', 'csrf_token': csrf_token}\nprint(params)\n```", "```py\n{'password':'test','username':'test','csrf_token':'jJgAHDQykMBnCFsPIZOoqdbflYRzXtSuiEmwKeGavVWxpNLUhrcT'}\n```", "```py\ncustomHeaders = getCustomHeaders(setCookie)\nresponse = requests.post(loginUrl, data=params, headers=customHeaders)\nsetCookie = responseCookies(response)\n#print(\"Set-Cookie: \",setCookie)\n\nresponseB = pq(response.text)\nlogoutText = responseB.find('a[href*=\"logout\"]').text()\nlogoutLink = responseB.find('a[href*=\"logout\"]').attr('href')\n\nprint(\"Current Page : \",response.url)\nprint(\"Confirm Login : \", responseB.find('.row h2').text())\nprint(\"Logout Info : \", logoutText,\" & \",logoutLink)\n```", "```py\nCurrent Page : http://quotes.toscrape.com/\nConfirm Login : Top Ten tags\nLogout Info : Logout & /logout\n```"]