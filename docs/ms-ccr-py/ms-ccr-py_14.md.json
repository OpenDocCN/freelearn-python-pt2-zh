["```py\n# Chapter14/example1.py\n\nimport random\nimport time\n\ndef update():\n    global counter\n\n    current_counter = counter # reading in shared resource\n    time.sleep(random.randint(0, 1)) # simulating heavy calculations\n    counter = current_counter + 1 # updating shared resource\n```", "```py\n# Chapter14/example1.py\n\nimport threading\n\ncounter = 0\n\nthreads = [threading.Thread(target=update) for i in range(20)]\n\nfor thread in threads:\n    thread.start()\nfor thread in threads:\n    thread.join()\n\nprint(f'Final counter: {counter}.')\nprint('Finished.')\n```", "```py\n> python3 example1.py\nFinal counter: 9.\nFinished.\n```", "```py\n> python3 example1.py\nFinal counter: 9.\nFinished.\n```", "```py\n> python3 example1.py\nFinal counter: 12.\nFinished.\n```", "```py\n> python3 example1.py\nFinal counter: 5.\nFinished.\n```", "```py\n# Chapter14/example2.py\n\nimport random\nimport time\n\ndef update():\n    global counter\n\n    with count_lock:\n        current_counter = counter # reading in shared resource\n        time.sleep(random.randint(0, 1)) # simulating heavy calculations\n        counter = current_counter + 1\n```", "```py\n# Chapter14/example2.py\n\nimport threading\n\ncounter = 0\ncount_lock = threading.Lock()\n\nthreads = [threading.Thread(target=update) for i in range(20)]\n\nfor thread in threads:\n    thread.start()\nfor thread in threads:\n    thread.join()\n\nprint(f'Final counter: {counter}.')\nprint('Finished.')\n```", "```py\n> python3 example2.py\nFinal counter: 20.\nFinished.\n```", "```py\n# ch14/example3.py\n\nimport threading\nimport random; random.seed(0)\nimport time\n\ndef update(pause_period):\n    global counter\n\n    with count_lock:\n        current_counter = counter # reading in shared resource\n        time.sleep(pause_period) # simulating heavy calculations\n        counter = current_counter + 1 # updating shared resource\n\npause_periods = [random.randint(0, 1) for i in range(20)]\n\n###########################################################################\n\ncounter = 0\ncount_lock = threading.Lock()\n\nstart = time.perf_counter()\nfor i in range(20):\n    update(pause_periods[i])\n\nprint('--Sequential version--')\nprint(f'Final counter: {counter}.')\nprint(f'Took {time.perf_counter() - start : .2f} seconds.')\n\n###########################################################################\n\ncounter = 0\n\nthreads = [threading.Thread(target=update, args=(pause_periods[i],)) for i in range(20)]\n\nstart = time.perf_counter()\nfor thread in threads:\n    thread.start()\nfor thread in threads:\n    thread.join()\n\nprint('--Concurrent version--')\nprint(f'Final counter: {counter}.')\nprint(f'Took {time.perf_counter() - start : .2f} seconds.')\n\n###########################################################################\n\nprint('Finished.')\n```", "```py\npause_periods = [random.randint(0, 1) for i in range(20)]\n```", "```py\ncounter = 0\ncount_lock = threading.Lock()\n\nstart = time.perf_counter()\nfor i in range(20):\n    update(pause_periods[i])\n\nprint('--Sequential version--')\nprint(f'Final counter: {counter}.')\nprint(f'Took {time.perf_counter() - start : .2f} seconds.')\n```", "```py\ncounter = 0\n\nthreads = [threading.Thread(target=update, args=(pause_periods[i],)) for i in range(20)]\n\nstart = time.perf_counter()\nfor thread in threads:\n    thread.start()\nfor thread in threads:\n    thread.join()\n\nprint('--Concurrent version--')\nprint(f'Final counter: {counter}.')\nprint(f'Took {time.perf_counter() - start : .2f} seconds.')\n```", "```py\n> python3 example3.py\n--Sequential version--\nFinal counter: 20.\nTook 12.03 seconds.\n--Concurrent version--\nFinal counter: 20.\nTook 12.03 seconds.\nFinished.\n```"]