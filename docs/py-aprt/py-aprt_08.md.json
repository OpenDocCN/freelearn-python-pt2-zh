["```py\nfrom urllib.request import urlopen\n\nwith urlopen('http://sixty-north.com/c/t.txt') as story:\n    story_words = []\n    for line in story:\n        line_words = line.decode('utf-8').split()\n        for word in line_words:\n            story_words.append(word)\n\n```", "```py\n$ cd pyfund\n\n```", "```py\n$ python3 words.py\n\n```", "```py\n> python words.py\n\n```", "```py\nfor word in story_words:\n    print(word)\n\n```", "```py\n$ python\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import words\nIt\nwas\nthe\nbest\nof\ntimes\n. . .\n\n```", "```py\n>>> def square(x):\n...     return x * x\n...\n\n```", "```py\n>>> square(5)\n5\n\n```", "```py\n>>> def launch_missiles():\n...     print(\"Missiles launched!\")\n...\n>>> launch_missiles()\nMissiles launched!\n\n```", "```py\n>>> def even_or_odd(n):\n...     if n % 2 == 0:\n...         print(\"even\")\n...         return\n...     print(\"odd\")\n...\n>>> even_or_odd(4)\neven\n>>> even_or_odd(5)\nodd\n\n```", "```py\n>>> w = even_or_odd(31)\nodd\n>>> w is None\nTrue\n\n```", "```py\nfrom urllib.request import urlopen\n\ndef fetch_words():\n    with urlopen('http://sixty-north.com/c/t.txt') as story:\n        story_words = []\n        for line in story:\n            line_words = line.decode('utf-8').split()\n            for word in line_words:\n                story_words.append(word)\n\n    for word in story_words:\n        print(word)\n\n```", "```py\n$ python3\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import words\n\n```", "```py\n>>> words.fetch_words()\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\n>>> from words import fetch_words\n>>> fetch_words()\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\n$ python3 words.py\n\n```", "```py\nprint(__name__)\n\n```", "```py\n$ python3\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import words\nwords\n\n```", "```py\n>>> import words\n>>>\n\n```", "```py\n$ python3 words.py\n__main__\n\n```", "```py\nif __name__ == '__main__':\n    fetch_words()\n\n```", "```py\n$ python3\n>>> import words\n>>>\n\n```", "```py\n$ python3 words.py\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\nfrom urllib.request import urlopen\n\n# This fetches the words and returns them as a list.\ndef fetch_words():\n    with urlopen('http://sixty-north.com/c/t.txt') as story:\n        story_words = []\n        for line in story:\n            line_words = line.decode('utf-8').split()\n            for word in line_words:\n                story_words.append(word)\n    return story_words\n\n# This prints a list of words\ndef print_words(story_words):\n    for word in story_words:\n      print(word)\n\nif __name__ == '__main__':\n    words = fetch_words()\n    print_words(words)\n\n```", "```py\ndef main():\n    words = fetch_words()\n    print_words(words)\n\nif __name__ == '__main__':\n    main()\n\n```", "```py\n>>> from words import (fetch_words, print_words)\n>>> print_words(fetch_words())\n\n```", "```py\n>>> from words import *\n\n```", "```py\n>>> fetch_words()\n['It', 'was', 'the', 'best', 'of', 'times', 'it', 'was', 'the', 'worst',\n'of', 'times', 'it', 'was', 'the', 'age', 'of', 'wisdom', 'it', 'was',\n'the', 'age', 'of', 'foolishness', 'it', 'was', 'the', 'epoch', 'of',\n'belief', 'it', 'was', 'the', 'epoch', 'of', 'incredulity', 'it', 'was',\n'the', 'season', 'of', 'Light', 'it', 'was', 'the', 'season', 'of',\n'Darkness', 'it', 'was', 'the', 'spring', 'of', 'hope', 'it', 'was', 'the',\n'winter', 'of', 'despair', 'we', 'had', 'everything', 'before', 'us', 'we',\n'had', 'nothing', 'before', 'us', 'we', 'were', 'all', 'going', 'direct',\n'to', 'Heaven', 'we', 'were', 'all', 'going', 'direct', 'the', 'other',\n'way', 'in', 'short', 'the', 'period', 'was', 'so', 'far', 'like', 'the',\n'present', 'period', 'that', 'some', 'of', 'its', 'noisiest', 'authorities',\n'insisted', 'on', 'its', 'being', 'received', 'for', 'good', 'or', 'for',\n'evil', 'in', 'the', 'superlative', 'degree', 'of', 'comparison', 'only']\n\n```", "```py\n>>> print_words(['Any', 'list', 'of', 'words'])\nAny\nlist\nof\nwords\n\n```", "```py\n>>> main()\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\n>>> print_words([1, 7, 3])\n1\n7\n3\n\n```", "```py\n>>> print_words(\"Strings are iterable too\")\nS\nt\nr\ni\nn\ng\ns\n\na\nr\ne\n\ni\nt\ne\nr\na\nb\nl\ne\n\nt\no\no\n\n```", "```py\ndef print_items(items):\n    for item in items:\n        print(item)\n\n```", "```py\ndef fetch_words(url):\n    with urlopen(url) as story:\n        story_words = []\n        for line in story:\n            line_words = line.decode('utf-8').split()\n            for word in line_words:\n                story_words.append(word)\n    return story_words\n\n```", "```py\nimport sys\n\n```", "```py\ndef main():\n    url = sys.argv[1]\n    words = fetch_words(url)\n    print_items(words)\n\n```", "```py\n$ python3 words.py http://sixty-north.com/c/t.txt\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\n$ python3\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from words import *\n>>> main()\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/sixtynorth/projects/sixty-north/the-python-apprentice/manuscript/code/\\\npyfund/words.py\", line 21, in main\n    url = sys.argv[1]\nIndexError: list index out of range\n>>>\n\n```", "```py\ndef main(url):\n    words = fetch_words(url)\n    print_items(words)\n\nif __name__ == '__main__':\n    main(sys.argv[1])\n\n```", "```py\n>>> from words import *\n>>> main(\"http://sixty-north.com/c/t.txt\")\nIt\nwas\nthe\nbest\nof\ntimes\n\n```", "```py\ndef fetch_words(url):\n    \"\"\"Fetch a list of words from a URL.\"\"\"\n    with urlopen(url) as story:\n        story_words = []\n        for line in story:\n            line_words = line.decode('utf-8').split()\n            for word in line_words:\n                story_words.append(word)\n    return story_words\n\n```", "```py\ndef fetch_words(url):\n    \"\"\"Fetch a list of words from a URL.\n\n Args:\n url: The URL of a UTF-8 text document.\n\n Returns:\n A list of strings containing the words from\n the document.\n \"\"\"\n    with urlopen(url) as story:\n        story_words = []\n        for line in story:\n            line_words = line.decode('utf-8').split()\n            for word in line_words:\n                story_words.append(word)\n    return story_words\n\n```", "```py\n$ python3\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from words import *\n>>> help(fetch_words)\n\nHelp on function fetch_words in module words:\n\nfetch_words(url)\n    Fetch a list of words from a URL.\n\n    Args:\n        url: The URL of a UTF-8 text document.\n\n    Returns:\n        A list of strings containing the words from\n        the document.\n(END)\n\n```", "```py\ndef print_items(items):\n    \"\"\"Print items one per line.\n\n Args:\n items: An iterable series of printable items.\n \"\"\"\n    for item in items:\n        print(item)\n\ndef main(url):\n    \"\"\"Print each word from a text document from at a URL.\n\n Args:\n url: The URL of a UTF-8 text document.\n \"\"\"\n    words = fetch_words(url)\n    print_items(words)\n\n```", "```py\n\"\"\"Retrieve and print words from a URL.\n\nUsage:\n\n python3 words.py <URL>\n\"\"\"\n\nimport sys\nfrom urllib.request import urlopen\n\n```", "```py\n$ python3\nPython 3.5.0 (default, Nov  3 2015, 13:17:02)\n[GCC 4.2.1 Compatible Apple LLVM 6.1.0 (clang-602.0.53)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import words\n>>> help(words)\n\nHelp on module words:\n\nNAME\n    words - Retrieve and print words from a URL.\n\nDESCRIPTION\n    Usage:\n\n        python3 words.py <URL>\n\nFUNCTIONS\n    fetch_words(url)\n        Fetch a list of words from a URL.\n\n        Args:\n            url: The URL of a UTF-8 text document.\n\n        Returns:\n            A list of strings containing the words from\n            the document.\n\n    main(url)\n        Print each word from a text document from at a URL.\n\n        Args:\n            url: The URL of a UTF-8 text document.\n\n    print_items(items)\n        Print items one per line.\n\n        Args:\n            items: An iterable series of printable items.\n\nFILE\n    /Users/sixtynorth/the-python-apprentice/words.py\n\n(END)\n\n```", "```py\nif __name__ == '__main__':\n    main(sys.argv[1])  # The 0th arg is the module filename.\n\n```", "```py\n#!/usr/bin/env python3\n\n```", "```py\n$ chmod +x words.py\n\n```", "```py\n$ ./words.py http://sixty-north.com/c/t.txt\n\n```", "```py\n> words.py http://sixty-north.com/c/t.txt\n\n```", "```py\nPS> .\\words.py http://sixty-north.com/c/t.txt\n\n```"]