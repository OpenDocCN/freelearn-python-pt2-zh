["```py\n>>> def square(x):\n...     return x * x\n...\n\n```", "```py\n$ python3 words.py\n\n```", "```py\n> python words.py\n\n```", "```py\ndef write_sequence(filename, num):\n    \"\"\"Write Recaman's sequence to a text file.\"\"\"\n    with open(filename, mode='wt', encoding='utf-8') as f:\n        f.writelines(\"{0}\\n\".format(r)\n                     for r in islice(sequence(), num + 1))\n\n```", "```py\n>>> print(\"This is a single line of code which is very long. Too long, in fact, to fi\\\nt on a single physical line of code in the book.\")\n\n```", "```py\n 1 def write_grayscale(filename, pixels):\n 2    height = len(pixels)\n 3    width = len(pixels[0])\n 4 \n 5    with open(filename, 'wb') as bmp:\n 6        # BMP Header\n 7        bmp.write(b'BM')\n 8 \n 9        # The next four bytes hold the filesize as a 32-bit\n10         # little-endian integer. Zero placeholder for now.\n11         size_bookmark = bmp.tell()\n12         bmp.write(b'\\x00\\x00\\x00\\x00')\n\n```", "```py\nclass Flight:\n\n    # ...\n\n    def make_boarding_cards(self, card_printer):\n        for passenger, seat in sorted(self._passenger_seats()):\n            card_printer(passenger, seat, self.number(), self.aircraft_model())\n\n```"]