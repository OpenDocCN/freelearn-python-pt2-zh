["```py\n>>> 'This is a string'\n\n```", "```py\n>>> \"This is also a string\"\n\n```", "```py\n>>> \"inconsistent'\n  File \"<stdin>\", line 1\n    \"inconsistent'\n                  ^\nSyntaxError: EOL while scanning string literal\n\n```", "```py\n>>> \"It's a good thing.\"\n\"It's a good thing.\"\n>>> '\"Yes!\", he said, \"I agree!\"'\n'\"Yes!\", he said, \"I agree!\"'\n\n```", "```py\n>>> \"first\" \"second\"\n'firstsecond'\n\n```", "```py\n>>> \"\"\"This is\n... a multiline\n... string\"\"\"\n'This is\\na multiline\\nstring'\n\n```", "```py\n>>> '''So\n... is\n... this.'''\n'So\\nis\\nthis.'\n\n```", "```py\n>>> m = 'This string\\nspans mutiple\\nlines'\n>>> m\n'This string\\nspans mutiple\\nlines'\n\n```", "```py\n>>> print(m)\nThis string\nspans mutiple\nlines\n\n```", "```py\n>>> \"This is a \\\" in a string\"\n'This is a \" in a string'\n\n```", "```py\n>>> 'This is a \\' in a string'\n\"This is a ' in a string\"\n\n```", "```py\n>>> 'This is a \\\" and a \\' in a string'\n'This is a \" and a \\' in a string'\n\n```", "```py\n>>> k = 'A \\\\ in a string'\n'A \\\\ in a string'\n\n```", "```py\n>>> print(k)\nA \\ in a string\n\n```", "```py\n>>> path = r'C:\\Users\\Merlin\\Documents\\Spells'\n>>>\n>>> path\n'C:\\\\Users\\\\Merlin\\\\Documents\\\\Spells'\n>>> print(path)\nC:\\Users\\Merlin\\Documents\\Spells\n\n```", "```py\n>>> str(496)\n>>> '496'\n\n```", "```py\n>>> str(6.02e23)\n'6.02e+23'\n\n```", "```py\n>>> s = 'parrot'\n>>> s[4]\n'o'\n\n```", "```py\n>>> type(s[4])\n<class 'str'>\n\n```", "```py\n>>> help(str)\n\n```", "```py\nHelp on class str in module builtins:\n\nclass str(object)\n |  str(object='') -> str\n |  str(bytes_or_buffer[, encoding[, errors]]) -> str\n |\n |  Create a new string object from the given object. If encoding or\n |  errors is specified, then the object must expose a data buffer\n |  that will be decoded using the given encoding and error handler.\n |  Otherwise, returns the result of object.__str__() (if defined)\n |  or repr(object).\n |  encoding defaults to sys.getdefaultencoding().\n |  errors defaults to 'strict'.\n |\n |  Methods defined here:\n |\n |  __add__(self, value, /)\n |      Return self+value.\n |\n |  __contains__(self, key, /)\n |      Return key in self.\n |\n |  __eq__(self, value, /)\n:\n\n```", "```py\n |      Create and return a new object.  See help(type) for accurate signature.\n |\n |  __repr__(self, /)\n |      Return repr(self).\n |\n |  __rmod__(self, value, /)\n |      Return value%self.\n |\n |  __rmul__(self, value, /)\n |      Return self*value.\n |\n |  __sizeof__(...)\n |      S.__sizeof__() -> size of S in memory, in bytes\n |\n |  __str__(self, /)\n |      Return str(self).\n |\n |  capitalize(...)\n |      S.capitalize() -> str\n |\n |      Return a capitalized version of S, i.e. make the first character\n |      have upper case and the rest lower case.\n |\n:\n\n```", "```py\n>>> c = \"oslo\"\n\n```", "```py\n>>> c.capitalize()\n'Oslo'\n\n```", "```py\n>>> c\n'oslo'\n\n```", "```py\n>>> \"Vi er s\u00e5 glad for \u00e5 h\u00f8re og l\u00e6re om Python!\"\n'Vi er s\u00e5 glad for \u00e5 h\u00f8re og l\u00e6re om Python!'\n\n```", "```py\n>>> \"Vi er s\\u00e5 glad for \\u00e5 h\\xf8re og l\\u00e6re om Python!\"\n'Vi er s\u00e5 glad for \u00e5 h\u00f8re og l\u00e6re om Python!'\n\n```", "```py\n>>> '\\xe5'\n'\u00e5'\n\n```", "```py\n>>> '\\345'\n'\u00e5'\n\n```", "```py\n>>> b'data'\nb'data'\n>>> b\"data\"\nb'data'\n\n```", "```py\n>>> d = b'some bytes'\n>>> d.split()\n[b'some', b'bytes']\n\n```", "```py\n>>> norsk = \"Jeg begynte \u00e5 fort\u00e6re en sandwich mens jeg kj\u00f8rte taxi p\u00e5 vei til quiz\"\n\n```", "```py\n>>> data = norsk.encode('utf-8')\n>>> data\nb'Jeg begynte \\xc3\\xa5 fort\\xc3\\xa6re en sandwich mens jeg kj\\xc3\\xb8rte taxi p\\xc3\\x\\\na5 vei til quiz'\n\n```", "```py\n>>> norwegian = data.decode('utf-8')\n\n```", "```py\n>>> norwegian == norsk\nTrue\n\n```", "```py\n>>> norwegian\n'Jeg begynte \u00e5 fort\u00e6re en sandwich mens jeg kj\u00f8rte taxi p\u00e5 vei til quiz'\n\n```", "```py\n>>> [1, 9, 8]\n[1, 9, 8]\n\n```", "```py\n>>> a = [\"apple\", \"orange\", \"pear\"]\n\n```", "```py\n>>> a[1]\n\"orange\"\n\n```", "```py\n>>> a[1] = 7\n>>> a\n['apple', 7, 'pear']\n\n```", "```py\n>>> b = []\n\n```", "```py\n>>> b.append(1.618)\n>>> b\n[1.618]\n>>> b.append(1.414)\n[1.618, 1.414]\n\n```", "```py\n>>> list(\"characters\")\n['c', 'h', 'a', 'r', 'a', 'c', 't', 'e', 'r', 's']\n\n```", "```py\n>>> c = ['bear',\n...      'giraffe',\n...      'elephant',\n...      'caterpillar',]\n>>> c\n['bear', 'giraffe', 'elephant', 'caterpillar']\n\n```", "```py\n>>> d = {'alice': '878-8728-922', 'bob': '256-5262-124', 'eve': '198-2321-787'}\n\n```", "```py\n>>> d['alice']\n'878-8728-922'\n\n```", "```py\n>>> d['alice'] = '966-4532-6272'\n>>> d\n{'bob': '256-5262-124', 'eve': '198-2321-787', 'alice': '966-4532-6272'}\n\n```", "```py\n>>> d['charles'] = '334-5551-913'\n>>> d\n{'bob': '256-5262-124', 'eve': '198-2321-787',\n'charles': '334-5551-913', 'alice': '966-4532-6272'}\n\n```", "```py\n>>> e = {}\n\n```", "```py\n>>> cities = [\"London\", \"New York\", \"Paris\", \"Oslo\", \"Helsinki\"]\n>>> for city in cities:\n...     print(city)\n...\nLondon\nNew York\nParis\nOslo\nHelsinki\n\n```", "```py\n>>> colors = {'crimson': 0xdc143c, 'coral': 0xff7f50, 'teal': 0x008080}\n>>> for color in colors:\n...    print(color, colors[color])\n...\ncoral 16744272\ncrimson 14423100\nteal 32896\n\n```", "```py\n1 >>> from urllib.request import urlopen\n2 >>> with urlopen('http://sixty-north.com/c/t.txt') as story:\n3 ...     story_words = []\n4 ...     for line in story:\n5 ...         line_words = line.split()\n6 ...         for word in line_words:\n7 ...             story_words.append(word)\n8 ...\n\n```", "```py\n>>> story_words\n[b'It', b'was', b'the', b'best', b'of', b'times', b'it', b'was', b'the',\nb'worst', b'of', b'times',b'it', b'was', b'the', b'age', b'of', b'wisdom',\nb'it', b'was', b'the', b'age', b'of', b'foolishness', b'it', b'was',\nb'the', b'epoch', b'of', b'belief', b'it', b'was', b'the', b'epoch', b'of',\nb'incredulity', b'it', b'was', b'the', b'season', b'of', b'Light', b'it',\nb'was', b'the', b'season', b'of', b'Darkness', b'it', b'was', b'the',\nb'spring', b'of', b'hope', b'it', b'was', b'the', b'winter', b'of',\nb'despair', b'we', b'had', b'everything', b'before', b'us', b'we', b'had',\nb'nothing', b'before', b'us', b'we', b'were', b'all', b'going', b'direct',\nb'to', b'Heaven', b'we', b'were', b'all', b'going', b'direct', b'the',\nb'other', b'way', b'in', b'short', b'the', b'period', b'was', b'so', b'far',\nb'like', b'the', b'present', b'period', b'that', b'some', b'of', b'its',\nb'noisiest', b'authorities', b'insisted', b'on', b'its', b'being',\nb'received', b'for', b'good', b'or', b'for', b'evil', b'in', b'the',\nb'superlative', b'degree', b'of', b'comparison', b'only']\n\n```", "```py\n1 >>> with urlopen('http://sixty-north.com/c/t.txt') as story:\n2 ...     story_words = []\n3 ...     for line in story:\n4 ...         line_words = line.decode('utf-8').split()\n5 ...         for word in line_words:\n6 ...             story_words.append(word)\n7 ...\n\n```", "```py\n>>> story_words\n['It', 'was', 'the', 'best', 'of', 'times', 'it',\n'was', 'the', 'worst', 'of', 'times', 'it', 'was', 'the', 'age', 'of',\n'wisdom', 'it', 'was', 'the', 'age', 'of', 'foolishness', 'it', 'was',\n'the', 'epoch', 'of', 'belief', 'it', 'was', 'the', 'epoch', 'of',\n'incredulity', 'it', 'was', 'the', 'season', 'of', 'Light', 'it',\n'was', 'the', 'season', 'of', 'Darkness', 'it', 'was', 'the',\n'spring', 'of', 'hope', 'it', 'was', 'the', 'winter', 'of', 'despair',\n'we', 'had', 'everything', 'before', 'us', 'we', 'had', 'nothing',\n'before', 'us', 'we', 'were', 'all', 'going', 'direct', 'to',\n'Heaven', 'we', 'were', 'all', 'going', 'direct', 'the', 'other',\n'way', 'in', 'short', 'the', 'period', 'was', 'so', 'far', 'like',\n'the', 'present', 'period', 'that', 'some', 'of', 'its', 'noisiest',\n'authorities', 'insisted', 'on', 'its', 'being', 'received', 'for',\n'good', 'or', 'for', 'evil', 'in', 'the', 'superlative', 'degree',\n'of', 'comparison', 'only']\n\n```"]