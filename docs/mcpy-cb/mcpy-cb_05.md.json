["```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> import time\n>>> cpx.temperature\n25.7499\n```", "```py\n>>> cpx.temperature\n30.031\n```", "```py\n>>> start = time.monotonic()\n>>> start\n27.409\n```", "```py\n>>> time.monotonic() - start\n11.37\n```", "```py\n>>> locals()\n{'time': <module 'time'>, 'start': 60.659, '__name__': '__main__'}\n>>> \n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nstart = time.monotonic()\nwhile True:\n    elapsed = time.monotonic() - start\n    temp = cpx.temperature\n    print('{elapsed:.2f}\\t{temp}'.format(**locals()))\n    time.sleep(0.1)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.light\n5\n```", "```py\n>>> cpx.light\n308\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    print(cpx.light)\n    time.sleep(0.1)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> import time\n>>> \n>>> BLACK = 0x000000\n>>> BLUE = 0x0000FF\n>>> MAX_LUX = 330\n>>> cpx.pixels.brightness = 0.10\n>>> \n>>> def gauge(level):\n...     cpx.pixels[0:level] = [BLUE] * level\n...     \n...     \n... \n>>> gauge(2)\n```", "```py\n>>> gauge(5)\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nBLACK = 0x000000\nBLUE = 0x0000FF\nMAX_LUX = 330\ncpx.pixels.brightness = 0.10\n\ndef gauge(level):\n    cpx.pixels[0:level] = [BLUE] * level\n\nlast = 0\nwhile True:\n    level = int((cpx.light / MAX_LUX) * 10)\n    if level != last:\n        cpx.pixels.fill(BLACK)\n        gauge(level)\n        last = level\n    time.sleep(0.05)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.acceleration.z\n9.46126\n```", "```py\n>>> cpx.acceleration.z\n-9.30804\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    x, y, z = cpx.acceleration\n    print('x: {x:.2f} y: {y:.2f} z: {z:.2f}'.format(**locals()))\n    time.sleep(0.1)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.detect_taps = 1\n>>> cpx.tapped\nFalse\n```", "```py\n>>> cpx.tapped\nTrue\n>>> cpx.tapped\nFalse\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\ncpx.detect_taps = 1\nwhile True:\n    print('tap detected:', cpx.tapped)\n    time.sleep(0.1)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.shake(20)\nFalse\n```", "```py\n>>> cpx.shake(20)\nTrue\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    print('shake detected:', cpx.shake())\n    time.sleep(0.1)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.play_tone(900, 0.2)\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    if cpx.shake(20):\n        cpx.play_tone(900, 0.2)\n    time.sleep(0.1)\n```"]