["```py\n$ ls /dev/ttyUSB0\n/dev/ttyUSB0\n```", "```py\n$ sudo screen /dev/ttyUSB0 115200\n```", "```py\nAdafruit CircuitPython 3.1.2 on 2019-01-07; ESP module with ESP8266\n>>> \n>>> \n```", "```py\n>>> import math\n>>> math.pow(8,2)\n64.0\n>>> 8**2\n64\n```", "```py\n>>> import network\n>>> station = network.WLAN(network.STA_IF)\n```", "```py\n>>> station.active(True)\n```", "```py\n>>> networks = station.scan()\nscandone\n```", "```py\n>>> networks\n[(b'My WiFi', b'\\x80*\\xa8\\x84\\xa6\\xfa', 1, -72, 3, 0), (b'Why Fi', b'\\xc8Q\\x95\\x92\\xaa\\xd0', 1, -92, 4, 0), (b'Wi Oh Wi', b'd\\xd1T\\x9a\\xb3\\xcd', 1, -90, 3, 0)]\n>>> len(networks)\n3\n```", "```py\n>>> names = [i[0] for i in networks]\n>>> names\n[b'My WiFi', b'Why Fi', b'Wi Oh Wi']\n```", "```py\n>>> import network\n>>> ap = network.WLAN(network.AP_IF)\n```", "```py\n>>> ap.config(essid='PyWifi', password='12345678')\nbcn 0\ndel if1\npm open,type:2 0\nadd if1\npm close 7\n#7 ets_task(4020f4c0, 29, 3fff96f8, 10)\ndhcp server start:(ip:192.168.4.1,mask:255.255.255.0,gw:192.168.4.1)\nbcn 100\n>>> ap.active(True)\n```", "```py\n>>> add 1\naid 1\nstation: b0:35:9f:2c:69:aa join, AID = 1\n\n>>> \n```", "```py\n>>> add 2\naid 2\nstation: 34:2d:0d:8c:40:bb join, AID = 2\n\n>>> \n```", "```py\n>>> station: 34:2d:0d:8c:40:bb leave, AID = 2\nrm 2\n\n>>> \n```", "```py\n>>> ap.ifconfig()\n('192.168.4.1', '255.255.255.0', '192.168.4.1', '8.8.8.8')\n>>> \n```", "```py\n>>> import network\n>>> station = network.WLAN(network.STA_IF)\n>>> station.active(True)\n```", "```py\n>>> networks = station.scan()\nscandone\n>>> names = [i[0] for i in networks]\n>>> names\n[b'MyAmazingWiFi', b'Why Fi', b'Wi Oh Wi']\n```", "```py\n>>> station.connect('MyAmazingWiFi', 'MyAmazingPassword')\nap_loss\nscandone\nstate: 5 -> 0 (0)\nrm 0\nreconnect\n>>> scandone\nstate: 0 -> 2 (b0)\nstate: 2 -> 3 (0)\nstate: 3 -> 5 (10)\nadd 0\naid 1\ncnt \n\nconnected with MyAmazingWiFi, channel 6\ndhcp client start...\nip:192.168.43.110,mask:255.255.255.0,gw:192.168.43.1\n\n>>> \n```", "```py\n>>> station.isconnected()\nTrue\n```", "```py\n>>> station.ifconfig()\n('192.168.43.110', '255.255.255.0', '192.168.43.1', '192.168.43.1')\n>>> \n```", "```py\n>>> station.active(False)\nstate: 5 -> 0 (0)\nrm 0\ndel if0\nmode : softAP(86:f3:eb:b2:9b:aa)\n>>> \n```", "```py\n>>> import webrepl_setup\n```", "```py\nWebREPL daemon auto-start status: disabled\n\nWould you like to (E)nable or (D)isable it running on boot?\n(Empty line to quit)\n> E\n```", "```py\nTo enable WebREPL, you must set password for it\nNew password (4-9 chars): secret123\nConfirm password: secret123\n```", "```py\nChanges will be activated after reboot\nWould you like to reboot now? (y/n) y\nRebooting. Please manually reset if it hangs.\nstate: 5 -> 0 (0)\nrm 0\ndel if0\nbcn 0\ndel if1\nusl\nload 0x40100000, len 31012, room 16 \ntail 4\nchksum 0x61\nload 0x3ffe8000, len 1100, room 4 \ntail 8\nchksum 0x4e\nload 0x3ffe8450, len 3264, room 0 \ntail 0\nchksum 0x0f\ncsum 0x0f\nboot.py output:\nWebREPL daemon started on ws://192.168.4.1:8266\nWebREPL daemon started on ws://0.0.0.0:8266\nStarted webrepl in normal mode\n```", "```py\n$ python webrepl_cli.py --help\nwebrepl_cli.py - Perform remote file operations using MicroPython WebREPL protocol\nArguments:\n  [-p password] <host>:<remote_file> <local_file> - Copy remote file to local file\n  [-p password] <local_file> <host>:<remote_file> - Copy local file to remote file\nExamples:\n  webrepl_cli.py script.py 192.168.4.1:/another_name.py\n  webrepl_cli.py script.py 192.168.4.1:/app/\n  webrepl_cli.py -p password 192.168.4.1:/app/script.py .\n```", "```py\n$ python webrepl_cli.py  main.py 10.0.0.38:/\nPassword: \nop:put, host:10.0.0.38, port:8266, passwd:secret123.\nmain.py -> /main.py\nRemote WebREPL version: (3, 1, 2)\nSent 73 of 73 bytes\n```", "```py\n$ python webrepl_cli.py -p secret123 main.py 10.0.0.38:/\nop:put, host:10.0.0.38, port:8266, passwd:secret123.\nmain.py -> /main.py\nRemote WebREPL version: (3, 1, 2)\nSent 73 of 73 bytes\n```", "```py\nimport machine\nmachine.reset()\n```", "```py\n>>> from machine import Pin\n>>> red = Pin(0, Pin.OUT)\n>>> red.value(0)\n```", "```py\n>>> red.value(1)\n```", "```py\n>>> blue = Pin(2, Pin.OUT)\n>>> blue.value(0)\n```", "```py\n>>> blue.value(1)\n```", "```py\n>>> import time\n>>> \n>>> while True:\n...     blue.value(0)\n...     red.value(1)\n...     time.sleep(1)\n...     blue.value(1)\n...     red.value(0)\n...     time.sleep(1)\n...     \n...     \n... \n```"]