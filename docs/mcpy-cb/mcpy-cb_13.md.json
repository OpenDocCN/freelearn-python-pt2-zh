["```py\n>>> from machine import Pin\n>>> import time\n>>> \n>>> PINS = dict(a=0, b=16, c=2)\n```", "```py\n>>> def get_buttons():\n...     return dict(\n...         a=Pin(PINS['a'], Pin.IN, Pin.PULL_UP),\n...         b=Pin(PINS['b']),\n...         c=Pin(PINS['c'], Pin.IN, Pin.PULL_UP),\n...     )\n...     \n...     \n... \n>>> buttons = get_buttons()\n```", "```py\n>>> buttons['a'].value()\n1\n```", "```py\n>>> buttons['a'].value()\n0\n```", "```py\n>>> names = sorted(PINS.keys())\n>>> \n>>> def get_status(names, buttons):\n...     items = [format(i, buttons) for i in names]\n...     return ' '.join(items)\n...     \n...     \n... \n>>> \n```", "```py\n>>> get_status(names, buttons)\n'a: False b: False c: False'\n```", "```py\n>>> get_status(names, buttons)\n'a: False b: True c: False'\n```", "```py\nfrom machine import Pin\nimport time\n\nPINS = dict(a=0, b=16, c=2)\n\ndef format(name, buttons):\n    pressed = not buttons[name].value()\n    return '{name}: {pressed}'.format(name=name, pressed=pressed)\n\ndef get_status(names, buttons):\n    items = [format(i, buttons) for i in names]\n    return ' '.join(items)\n\ndef get_buttons():\n    return dict(\n        a=Pin(PINS['a'], Pin.IN, Pin.PULL_UP),\n        b=Pin(PINS['b']),\n        c=Pin(PINS['c'], Pin.IN, Pin.PULL_UP),\n    )\n\ndef main():\n    names = sorted(PINS.keys())\n    buttons = get_buttons()\n    while True:\n        status = get_status(names, buttons)\n        print(status)\n        time.sleep(0.1)\n\nmain()\n```", "```py\n>>> import adafruit_bus_device\n>>> import adafruit_framebuf\n```", "```py\n>>> import adafruit_ssd1306\n>>> \n```", "```py\n>>> import board\n>>> import busio\n```", "```py\n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> \n```", "```py\n>>> buttons['a'].value()\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n>>>\n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\n\ndef main():\n    print('initialize I2C bus')\n    i2c = busio.I2C(board.SCL, board.SDA)\n    print('create SSD1306_I2C object')\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    print('ALL DONE')\n\nmain()\n```", "```py\n>>> import adafruit_ssd1306\n>>> import board\n>>> import busio\n```", "```py\n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n```", "```py\n>>> oled.fill(1)\n>>> oled.show()\n```", "```py\n>>> oled.fill(0)\n>>> oled.show()\n```", "```py\n>>> for i in range(10):\n...     oled.fill(1)\n...     oled.show()\n...     oled.fill(0)\n...     oled.show()\n...     \n...     \n... \n>>>\n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\n\ndef main():\n    i2c = busio.I2C(board.SCL, board.SDA)\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    for i in range(10):\n        oled.fill(1)\n        oled.show()\n        oled.fill(0)\n        oled.show()\n\nmain()\n```", "```py\n>>> import adafruit_ssd1306\n>>> import board\n>>> import busio\n>>> \n>>> BLACK = 0\n>>> WHITE = 1\n>>> \n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n```", "```py\n>>> oled.pixel(0, 0, WHITE)\n>>> oled.show()\n```", "```py\n>>> oled.pixel(0, 0, BLACK)\n>>> oled.show()\n```", "```py\n>>> oled.pixel(10, 30, WHITE)\n>>> oled.show()\n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n>>> \n>>> for i in range(10):\n...     oled.pixel(i, i, WHITE)\n...     oled.show()\n...     \n...     \n... \n>>> \n```", "```py\n>>> def animate_pixel(oled, x, y, step_x, step_y, count):\n...     for i in range(count):\n...         x += step_x\n...         y += step_y\n...         oled.pixel(x, y, WHITE)\n...         oled.show()\n...         \n...         \n... \n>>> \n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n>>> animate_pixel(oled, x=0, y=0, step_x=1, step_y=1, count=30)\n```", "```py\n>>> animate_pixel(oled, x=30, y=30, step_x=1, step_y=-1, count=30)\n```", "```py\n>>> def zig_zag(oled):\n...     animate_pixel(oled, x=0, y=0, step_x=1, step_y=1, count=30)\n...     animate_pixel(oled, x=30, y=30, step_x=1, step_y=-1, \n...     count=30)\n...     animate_pixel(oled, x=60, y=0, step_x=1, step_y=1, count=30)\n...     animate_pixel(oled, x=90, y=30, step_x=1, step_y=-1, \n...     count=30)\n...     \n...     \n... \n>>> \n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n>>> zig_zag(oled)\n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\n\nBLACK = 0\nWHITE = 1\n\ndef animate_pixel(oled, x, y, step_x, step_y, count):\n    for i in range(count):\n        x += step_x\n        y += step_y\n        oled.pixel(x, y, WHITE)\n        oled.show()\n\ndef zig_zag(oled):\n    animate_pixel(oled, x=0, y=0, step_x=1, step_y=1, count=30)\n    animate_pixel(oled, x=30, y=30, step_x=1, step_y=-1, count=30)\n    animate_pixel(oled, x=60, y=0, step_x=1, step_y=1, count=30)\n    animate_pixel(oled, x=90, y=30, step_x=1, step_y=-1, count=30)\n\ndef main():\n    i2c = busio.I2C(board.SCL, board.SDA)\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    zig_zag(oled)\n\nmain()\n```", "```py\n>>> import adafruit_ssd1306\n>>> import board\n>>> import busio\n>>> \n>>> BLACK = 0\n>>> WHITE = 1\n>>> \n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n>>> oled.fill(BLACK)\n>>> oled.show()\n```", "```py\n>>> oled.vline(x=0, y=0, height=20, color=WHITE)\n>>> oled.show()\n```", "```py\n>>> oled.hline(x=0, y=0, width=80, color=WHITE)\n>>> oled.show()\n```", "```py\n>>> oled.rect(x=0, y=0, width=10, height=20, color=WHITE)\n>>> oled.show()\n```", "```py\n>>> def draw_hi(oled):\n...     print('drawing H')\n...     oled.vline(x=50, y=0, height=30, color=WHITE)\n...     oled.hline(x=50, y=15, width=30, color=WHITE)\n...     oled.vline(x=80, y=0, height=30, color=WHITE)\n...     oled.show()\n...     print('drawing I')\n...     oled.vline(x=100, y=0, height=30, color=WHITE)\n...     oled.show()\n...     \n...     \n... \n>>> \n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n>>> draw_hi(oled)\ndrawing H\ndrawing I\n>>> \n```", "```py\n>>> def animate_boxes(oled, x, y, step_x, step_y, size, count):\n...     for i in range(count):\n...         oled.rect(x, y, width=size, height=size, color=WHITE)\n...         oled.show()\n...         x += step_x\n...         y += step_y\n...         \n...         \n... \n>>> \n```", "```py\n>>> animate_boxes(oled, x=0, y=0, step_x=5, step_y=5, size=5, count=6)\n```", "```py\n>>> def draw_x_boxes(oled):\n...     animate_boxes(oled, x=0, y=0, step_x=5, step_y=5, size=5, count=6)\n...     animate_boxes(oled, x=0, y=25, step_x=5, step_y=-5, size=5, count=6)\n...     \n...     \n... \n>>> \n>>> draw_x_boxes(oled)\n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\n\nBLACK = 0\nWHITE = 1\n\ndef draw_hi(oled):\n    print('drawing H')\n    oled.vline(x=50, y=0, height=30, color=WHITE)\n    oled.hline(x=50, y=15, width=30, color=WHITE)\n    oled.vline(x=80, y=0, height=30, color=WHITE)\n    oled.show()\n    print('drawing I')\n    oled.vline(x=100, y=0, height=30, color=WHITE)\n    oled.show()\n\ndef animate_boxes(oled, x, y, step_x, step_y, size, count):\n    for i in range(count):\n        oled.rect(x, y, width=size, height=size, color=WHITE)\n        oled.show()\n        x += step_x\n        y += step_y\n\ndef draw_x_boxes(oled):\n    animate_boxes(oled, x=0, y=0, step_x=5, step_y=5, size=5, count=6)\n    animate_boxes(oled, x=0, y=25, step_x=5, step_y=-5, size=5, count=6)\n\ndef main():\n    i2c = busio.I2C(board.SCL, board.SDA)\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    draw_x_boxes(oled)\n    draw_hi(oled)\n\nmain()\n```", "```py\n>>> import adafruit_ssd1306\n>>> import board\n>>> import busio\n>>> \n>>> BLACK = 0\n>>> WHITE = 1\n>>> \n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n>>> oled.fill(BLACK)\n>>> oled.show()\n```", "```py\n>>> oled.text('hello', 0, 0, WHITE)\n>>> oled.show()\n```", "```py\n>>> oled.fill(BLACK)\n>>> oled.show()\n>>> \n>>> oled.text('line 1', 0, 0, WHITE)\n>>> oled.text('line 2', 0, 10, WHITE)\n>>> oled.text('line 3', 0, 20, WHITE)\n>>> oled.show()\n```", "```py\n>>> def countdown(oled, start):\n...     for i in range(start, -1, -1):\n...         oled.fill(BLACK)\n...         oled.text(str(i), 0, 0, WHITE)\n...         oled.show()\n...         \n...         \n... \n>>> \n>>> countdown(oled, 10)\n```", "```py\n>>> ALPHA_NUMERIC = [\n...     'abcdefghijklmnopqrstu',\n...     'vwxyzABCDEFGHIJKLMNOP',\n...     'QRSTUVWXYZ0123456789',\n... ]\n```", "```py\n>>> def show_alpha_numeric(oled):\n...     for i, text in enumerate(ALPHA_NUMERIC):\n...         oled.text(text, 0, 10 * i, WHITE)\n...         oled.show()\n...         \n...         \n... \n>>> oled.fill(BLACK)\n>>> show_alpha_numeric(oled)\n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\n\nBLACK = 0\nWHITE = 1\nALPHA_NUMERIC = [\n    'abcdefghijklmnopqrstu',\n    'vwxyzABCDEFGHIJKLMNOP',\n    'QRSTUVWXYZ0123456789',\n]\n\ndef countdown(oled, start):\n    for i in range(start, -1, -1):\n        oled.fill(BLACK)\n        oled.text(str(i), 0, 0, WHITE)\n        oled.show()\n\ndef show_alpha_numeric(oled):\n    for i, text in enumerate(ALPHA_NUMERIC):\n        oled.text(text, 0, 10 * i, WHITE)\n        oled.show()\n\ndef main():\n    i2c = busio.I2C(board.SCL, board.SDA)\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    oled.fill(BLACK)\n    countdown(oled, 10)\n    oled.fill(BLACK)\n    show_alpha_numeric(oled)\n\nmain()\n```", "```py\n>>> import adafruit_ssd1306\n>>> import board\n>>> import busio\n>>> \n>>> BLACK = 0\n>>> WHITE = 1\n>>> \n>>> i2c = busio.I2C(board.SCL, board.SDA)\n>>> oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n>>> oled.fill(BLACK)\n>>> oled.show()\n```", "```py\n>>> oled.invert(True)\n```", "```py\n>>> oled.invert(False)\n```", "```py\n>>> def measure_time(label, func, args=(), count=3):\n...     for i in range(count):\n...         start = time.monotonic()\n...         func(*args)\n...         total = (time.monotonic() - start) * 1000\n...         print(label + ':', '%s ms' % total)\n...         \n...         \n... \n>>> \n```", "```py\n>>> measure_time('fill', oled.fill, [BLACK])\nfill: 1047.85 ms\nfill: 1049.07 ms\nfill: 1046.14 ms\n>>> \n```", "```py\n>>> measure_time('show', oled.show, [])\nshow: 62.0117 ms\nshow: 62.0117 ms\nshow: 61.0352 ms\n>>>\n```", "```py\n>>> measure_time('text', oled.text, ['hello', 0, 0, WHITE])\ntext: 74.9512 ms\ntext: 75.1953 ms\ntext: 80.0781 ms\n>>> \n```", "```py\n>>> measure_time('invert', oled.invert, [True])\ninvert: 0.976563 ms\ninvert: 1.95313 ms\ninvert: 0.976563 ms\n>>> \n```", "```py\nimport adafruit_ssd1306\nimport board\nimport busio\nimport time\n\nBLACK = 0\nWHITE = 1\n\ndef measure_time(label, func, args=(), count=3):\n    for i in range(count):\n        start = time.monotonic()\n        func(*args)\n        total = (time.monotonic() - start) * 1000\n        print(label + ':', '%s ms' % total)\n\ndef main():\n    i2c = busio.I2C(board.SCL, board.SDA)\n    oled = adafruit_ssd1306.SSD1306_I2C(128, 32, i2c)\n    oled.fill(BLACK)\n    oled.show()\n\n    measure_time('fill', oled.fill, [BLACK])\n    measure_time('show', oled.show, [])\n    measure_time('text', oled.text, ['hello', 0, 0, WHITE])\n    measure_time('invert', oled.invert, [True])\n\nmain()\n```"]