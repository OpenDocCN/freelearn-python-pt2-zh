["```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.button_a\nFalse\n```", "```py\n>>> cpx.button_a\nTrue\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    print(cpx.button_a)\n    time.sleep(0.05)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> \n>>> BLACK = 0x000000\n>>> GREEN = 0x00FF00\n>>> \n>>> cpx.pixels.brightness = 0.10\n```", "```py\n>>> cpx.pixels[2] = GREEN if cpx.button_a else BLACK\n```", "```py\n>>> cpx.pixels[2] = GREEN if cpx.button_a else BLACK\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\n\nBLACK = 0x000000\nGREEN = 0x00FF00\n\ncpx.pixels.brightness = 0.10\nwhile True:\n    cpx.pixels[2] = GREEN if cpx.button_a else BLACK\n    cpx.pixels[7] = GREEN if cpx.button_b else BLACK\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.switch\nTrue\n```", "```py\n>>> cpx.switch\nFalse\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    print(cpx.switch)\n    time.sleep(0.05)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> def button_change(pressed):\n...     print('pressed:', pressed)\n... \n```", "```py\n>>> last = cpx.button_a\n>>> while True:\n...     if cpx.button_a != last:\n...         button_change(cpx.button_a)\n...         last = cpx.button_a\n... \npressed: True\npressed: False\npressed: True\npressed: False\npressed: True\npressed: False\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\n\ndef button_change(pressed):\n    print('pressed:', pressed)\n\nlast = cpx.button_a\nwhile True:\n    if cpx.button_a != last:\n        button_change(cpx.button_a)\n        last = cpx.button_a\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> import time\n>>> \n>>> BLACK = 0x000000\n>>> BLUE = 0x0000FF\n>>> \n>>> cpx.pixels.brightness = 0.10\n>>> i = 0\n>>> direction = 1\n>>> \n>>> \n```", "```py\n>>> while True:\n...     if cpx.button_a:\n...         direction = 1\n...     if cpx.button_b:\n...         direction = -1\n...     i += direction\n...     i = i % 10\n...     cpx.pixels.fill(BLACK)\n...     cpx.pixels[i] = BLUE\n...     time.sleep(0.05)\n... \n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nBLACK = 0x000000\nBLUE = 0x0000FF\n\ncpx.pixels.brightness = 0.10\ni = 0\ndirection = 1\nwhile True:\n    if cpx.button_a:\n        direction = 1\n    if cpx.button_b:\n        direction = -1\n    i += direction\n    i = i % 10\n    cpx.pixels.fill(BLACK)\n    cpx.pixels[i] = BLUE\n    time.sleep(0.05)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> if cpx.button_a:\n...     cpx.play_tone(500, 0.2)\n...     \n...     \n... \n>>>\n```", "```py\n>>> if cpx.button_b:\n...     cpx.play_tone(900, 0.2)\n...     \n...     \n... \n>>> \n```", "```py\nfrom adafruit_circuitplayground.express import cpx\n\nwhile True:\n    if cpx.button_a:\n        cpx.play_tone(500, 0.2)\n    if cpx.button_b:\n        cpx.play_tone(900, 0.2)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> cpx.touch_A1\nFalse\n```", "```py\n>>> cpx.touch_A1\nTrue\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\nwhile True:\n    if cpx.touch_A1:\n        print('detected touch')\n    time.sleep(0.05)\n```", "```py\n>>> import time\n>>> import touchio\n>>> import board\n>>> a1 = touchio.TouchIn(board.A1)\n>>> a1.raw_value\n1933\n>>> a1.threshold\n2050\n>>> \n```", "```py\n>>> a1.raw_value\n4065\n```", "```py\n>>> a1.raw_value\n1839\n```", "```py\nimport time\nimport touchio\nimport board\n\na1 = touchio.TouchIn(board.A1)\nwhile True:\n    touch = a1.raw_value > a1.threshold\n    print('raw:', a1.raw_value, 'threshold:', a1.threshold, 'touch:', touch)\n    time.sleep(0.5)\n```", "```py\n>>> from adafruit_circuitplayground.express import cpx\n>>> import time\n>>> \n>>> cpx.adjust_touch_threshold(200)\n```", "```py\n>>> cpx.touch_A1\nTrue\n```", "```py\nfrom adafruit_circuitplayground.express import cpx\nimport time\n\ncpx.adjust_touch_threshold(200)\nwhile True:\n    if cpx.touch_A1:\n        print('detected touch')\n    time.sleep(0.5)\n```"]